<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://frankelinli.github.io/blog</id>
    <title>富兰克林李 Blog</title>
    <updated>2024-03-18T20:25:41.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://frankelinli.github.io/blog"/>
    <subtitle>富兰克林李 Blog</subtitle>
    <icon>https://frankelinli.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[20240316]]></title>
        <id>https://frankelinli.github.io/blog/20240316</id>
        <link href="https://frankelinli.github.io/blog/20240316"/>
        <updated>2024-03-18T20:25:41.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[20240318大化瑶族]]></title>
        <id>https://frankelinli.github.io/blog/20240318大化瑶族</id>
        <link href="https://frankelinli.github.io/blog/20240318大化瑶族"/>
        <updated>2024-03-18T20:25:41.000Z</updated>
        <summary type="html"><![CDATA[设置了cloudflare后，网站评分提高了，但是网速变慢了。得不偿失？]]></summary>
        <content type="html"><![CDATA[<p>设置了cloudflare后，网站评分提高了，但是网速变慢了。得不偿失？</p>
<p>还是改回腾讯云自带的服务，取消cloudflare了。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="警告暂时不要折腾网站运维之类的集中完善网站内容不要瞎折腾"><strong>警告：暂时不要折腾网站运维之类的，集中完善网站内容！不要瞎折腾。</strong><a href="https://frankelinli.github.io/blog/20240318%E5%A4%A7%E5%8C%96%E7%91%B6%E6%97%8F#%E8%AD%A6%E5%91%8A%E6%9A%82%E6%97%B6%E4%B8%8D%E8%A6%81%E6%8A%98%E8%85%BE%E7%BD%91%E7%AB%99%E8%BF%90%E7%BB%B4%E4%B9%8B%E7%B1%BB%E7%9A%84%E9%9B%86%E4%B8%AD%E5%AE%8C%E5%96%84%E7%BD%91%E7%AB%99%E5%86%85%E5%AE%B9%E4%B8%8D%E8%A6%81%E7%9E%8E%E6%8A%98%E8%85%BE" class="hash-link" aria-label="警告暂时不要折腾网站运维之类的集中完善网站内容不要瞎折腾的直接链接" title="警告暂时不要折腾网站运维之类的集中完善网站内容不要瞎折腾的直接链接">​</a></h3>
<p>WordPress不要瞎折腾，这个静态博客也不要再写折腾！</p>
<p>多写点内容，而不是在主题、页面外观上搞来搞去！！</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="网站自己还没维护好又瞎几把搞cloudflare现在虽然撤回了却有出现了错误">网站自己还没维护好，又瞎几把搞cloudflare，现在虽然撤回了，却有出现了错误：<a href="https://frankelinli.github.io/blog/20240318%E5%A4%A7%E5%8C%96%E7%91%B6%E6%97%8F#%E7%BD%91%E7%AB%99%E8%87%AA%E5%B7%B1%E8%BF%98%E6%B2%A1%E7%BB%B4%E6%8A%A4%E5%A5%BD%E5%8F%88%E7%9E%8E%E5%87%A0%E6%8A%8A%E6%90%9Ecloudflare%E7%8E%B0%E5%9C%A8%E8%99%BD%E7%84%B6%E6%92%A4%E5%9B%9E%E4%BA%86%E5%8D%B4%E6%9C%89%E5%87%BA%E7%8E%B0%E4%BA%86%E9%94%99%E8%AF%AF" class="hash-link" aria-label="网站自己还没维护好，又瞎几把搞cloudflare，现在虽然撤回了，却有出现了错误：的直接链接" title="网站自己还没维护好，又瞎几把搞cloudflare，现在虽然撤回了，却有出现了错误：的直接链接">​</a></h3>
<p>此网站无法提供安全连接</p>
<p>XXXX使用了不受支持的协议。</p>
<p>ERR_SSL_VERSION_OR_CIPHER_MISMATCH</p>
<p>自动解决了，缓存的原因。</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>别再毫无章法的乱搞了，要集中精力做主要的事情，不要无头苍蝇，没有目标乱撞！！</p></div></div>
<hr>
<p>终于搞定docusaurus的GitHub action自动发布文章了。稀里糊涂搞成了。</p>
<p>不要再钻研这些东西了，</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[docusaurus和腾讯云服务器的朴素沟通]]></title>
        <id>https://frankelinli.github.io/blog/docusaurus和腾讯云服务器的朴素沟通</id>
        <link href="https://frankelinli.github.io/blog/docusaurus和腾讯云服务器的朴素沟通"/>
        <updated>2024-03-18T20:25:41.000Z</updated>
        <summary type="html"><![CDATA[本地电脑，访问远程主机的localhost:3000]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="本地电脑访问远程主机的localhost3000">本地电脑，访问远程主机的localhost:3000<a href="https://frankelinli.github.io/blog/docusaurus%E5%92%8C%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%B4%E7%B4%A0%E6%B2%9F%E9%80%9A#%E6%9C%AC%E5%9C%B0%E7%94%B5%E8%84%91%E8%AE%BF%E9%97%AE%E8%BF%9C%E7%A8%8B%E4%B8%BB%E6%9C%BA%E7%9A%84localhost3000" class="hash-link" aria-label="本地电脑，访问远程主机的localhost:3000的直接链接" title="本地电脑，访问远程主机的localhost:3000的直接链接">​</a></h3>
<p>ssh -L 3000:localhost:3000 root@121.220.83.133</p>
<p>这个命令会将本地电脑的 <code>3000</code> 端口转发到远程主机上的 <code>localhost:3000</code> 端口。</p>
<p>SSH 端口转发是一次性的，只要你关闭了终端窗口，端口转发就会自动停止。</p>
<p>端口转发只会影响你当前的 SSH 连接以及转发的端口，不会影响你的其他网络连接和端口使用</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="从远程服务器下载备份文件到本地">从远程服务器下载（备份）文件到本地<a href="https://frankelinli.github.io/blog/docusaurus%E5%92%8C%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%B4%E7%B4%A0%E6%B2%9F%E9%80%9A#%E4%BB%8E%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BD%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E5%88%B0%E6%9C%AC%E5%9C%B0" class="hash-link" aria-label="从远程服务器下载（备份）文件到本地的直接链接" title="从远程服务器下载（备份）文件到本地的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">scp -r root@121.220.83.133:/www/wwwroot/konglong/* C:\Users\wingxu\Desktop\shiyishi\</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在这个命令中，<code>-r</code> 选项表示要递归复制整个目录树，<code>root@121.220.83.133:/www/wwwroot/ceshi/*</code> 指定了要复制的远程目录和文件名通配符，<code>C:\Users\wingxu\Desktop\shiyishi\</code> 指定了要将文件复制到本地的目录。请注意，路径末尾的斜杠很重要，它表示将文件复制到目录中，而不是将整个远程目录复制到本地目录中。</p>
<p>在运行命令时，您需要输入远程主机的密码。另外，请确保本地主机和远程主机之间的网络连接正常，并且您具有足够的权限访问远程主机上的文件和目录。</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="linux主机设置一键deploy部署静态网站">Linux主机，设置一键deploy部署静态网站<a href="https://frankelinli.github.io/blog/docusaurus%E5%92%8C%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%B4%E7%B4%A0%E6%B2%9F%E9%80%9A#linux%E4%B8%BB%E6%9C%BA%E8%AE%BE%E7%BD%AE%E4%B8%80%E9%94%AEdeploy%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99" class="hash-link" aria-label="Linux主机，设置一键deploy部署静态网站的直接链接" title="Linux主机，设置一键deploy部署静态网站的直接链接">​</a></h3>
<p>制作一个Linux的批处理，首先运行npm run build;然后执行把build里构建好的文件，复制到网站根目录下。</p>
<p>您可以创建一个Shell脚本，将这两条命令放在一起执行。具体步骤如下：</p>
<p><strong>打开终端，使用文本编辑器创建一个新文件，比如说<code>deploy.sh</code>：</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nano deploy.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>在文件中输入以下内容：</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 进入项目目录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "正在进入项目目录：/www/wwwroot/konglong"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd /www/wwwroot/konglong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 执行npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "正在执行npm run build命令"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 复制文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "正在复制文件到目标目录：/www/wwwroot/mart"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp -r /www/wwwroot/konglong/build/* /www/wwwroot/mart/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 完成</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "部署已完成"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个脚本首先进入项目目录<code>/www/wwwroot/konglong</code>，然后执行<code>npm run build</code>命令生成打包文件，最后使用<code>cp</code>命令将打包文件复制到目标目录<code>/www/wwwroot/mart</code>。</p>
<p><strong>保存并退出文件。然后使用以下命令为脚本添加可执行权限：</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">chmod +x deploy.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>现在您可以运行这个脚本了。在终端中输入以下命令：</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./deploy.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个命令会执行<code>deploy.sh</code>脚本，依次执行<code>npm run build</code>和<code>cp</code>命令。</p>
<p>请注意，这个脚本中的路径应该根据您的实际情况进行修改。另外，如果您不希望每次运行脚本时都需要输入密码，可以将脚本放在root用户的家目录下，并使用root用户运行脚本。</p>
<p><strong>如果您将这个脚本保存在一个可执行的文件中，并将该文件添加到系统的PATH环境变量中，那么您可以在任意目录下运行该命令。</strong></p>
<p>以下是将脚本添加到PATH环境变量的步骤：</p>
<ol>
<li>将脚本保存为一个可执行文件，比如<code>deploy.sh</code>。</li>
<li>将文件复制到/usr/local/bin目录下：</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo cp deploy.sh /usr/local/bin/deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个命令将文件复制到/usr/local/bin目录下，并将文件名改为<code>deploy</code>。这个目录通常是系统的PATH环境变量包含的目录之一。</p>
<ol start="3">
<li>添加执行权限：</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo chmod +x /usr/local/bin/deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个命令将给<code>/usr/local/bin/deploy</code>文件添加可执行权限。</p>
<ol start="4">
<li>现在您可以在任意目录下运行该命令了：</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个命令会执行<code>/usr/local/bin/deploy</code>文件，依次执行<code>npm run build</code>和<code>cp</code>命令。</p>
<p>请注意，如果您在执行命令时仍然遇到权限问题，可以尝试使用sudo命令以root权限运行该命令。</p>
<hr>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat ~/.ssh/id_rsa.pub | ssh root@121.220.83.133 "mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ssh秘钥这样就不用每次连接服务器都输入密码了">SSH秘钥，这样就不用每次连接服务器都输入密码了<a href="https://frankelinli.github.io/blog/docusaurus%E5%92%8C%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%B4%E7%B4%A0%E6%B2%9F%E9%80%9A#ssh%E7%A7%98%E9%92%A5%E8%BF%99%E6%A0%B7%E5%B0%B1%E4%B8%8D%E7%94%A8%E6%AF%8F%E6%AC%A1%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%BD%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E4%BA%86" class="hash-link" aria-label="SSH秘钥，这样就不用每次连接服务器都输入密码了的直接链接" title="SSH秘钥，这样就不用每次连接服务器都输入密码了的直接链接">​</a></h3>
<p>在默认情况下，每次使用 <code>scp</code> 命令都需要输入远程主机的密码。为了避免每次手动输入密码，您可以使用 SSH 公钥认证的方式。</p>
<p>SSH 公钥认证的基本原理是，在本地主机上生成一对公钥和私钥，将公钥复制到远程主机上，然后将私钥用于本地主机与远程主机之间的认证，这样就可以实现自动登录，不再需要手动输入密码。</p>
<p>以下是使用 SSH 公钥认证的步骤：</p>
<ol>
<li>在本地主机上生成 SSH 密钥对。</li>
</ol>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh-keygen -t rsa</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>按照提示输入文件名和密码。如果您不想设置密码，可以直接按回车键。</p>
<ol start="2">
<li>将公钥复制到远程主机上。</li>
</ol>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh-copy-id username@remote_host</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>[如果windows终端执行不了这个代码，则需要安装git,用Git的bash终端来执行这个命令]</p>
<p>其中 <code>username</code> 是远程主机上的用户名，<code>remote_host</code> 是远程主机的 IP 地址或主机名。运行命令后，您需要输入远程主机的密码。</p>
<ol start="3">
<li>测试 SSH 公钥认证是否生效。</li>
</ol>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh root@121.220.83.133</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果 SSH 公钥认证设置成功，您将可以直接登录到远程主机，不再需要输入密码。此时，您可以使用 <code>scp</code> 命令将文件上传到远程主机，不再需要手动输入密码。</p>
<hr>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rsync -avzhe ssh --delete C:\Users\wingxu\wiki root@121.220.83.133:/www/wwwroot/konglong</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[通过命令行从本地推送代码到GitHub]]></title>
        <id>https://frankelinli.github.io/blog/git使用简介教程</id>
        <link href="https://frankelinli.github.io/blog/git使用简介教程"/>
        <updated>2024-03-18T20:25:41.000Z</updated>
        <summary type="html"><![CDATA[原文连接通过命令行从本地推送代码到GitHub | XSUN (xsun4231.github.io)]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_BuS1"><p>原文连接<a href="https://xsun4231.github.io/2019/04/15/git-connect/" target="_blank" rel="noopener noreferrer">通过命令行从本地推送代码到GitHub | XSUN (xsun4231.github.io)</a></p></div></div>
<p>首先，Git和GitHub不是一个东西。Git是一个版本管理系统，而GitHub是一个用来保存软件代码的平台。我们不妨把git看作是通讯技术，而github只是<strong>一个</strong>通讯服务商。也就是说除了github之外，还有很多的代码托管平台，大家都是用的git来上传下载代码，只不过github名气最大。</p>
<ul>
<li>为了不受各种不同的软件影响，这里说的都是通过命令行操作.</li>
<li>这里只介绍一些最基本的命令和用法，在命令后面加<code>--help</code>可以查看详细的文档.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="环境搭建">环境搭建<a href="https://frankelinli.github.io/blog/git%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E6%95%99%E7%A8%8B#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA" class="hash-link" aria-label="环境搭建的直接链接" title="环境搭建的直接链接">​</a></h2>
<p>首先要做的事安装<code>git</code>，下载地址在<a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">这里</a>.</p>
<p>git安装完之后，打开命令行执行<code>git --version</code>看看是否可以查看git的版本，如果返回版本信息，就OK了. git会自己安装一个<code>git Bash</code>, 不过git的命令行并不局限于bash，windows下直接在cmd或者powershell都可以使用.</p>
<p>本地的代码推送到github时，github需要验证用户的信息. 就好比你可以每次进门都填一次我叫什么，我从哪儿来，我是干什么的，也可以提前登陆好身份信息，“哔”的一声刷脸进门，这个登录的身份信息就是<code>ssh key</code>.</p>
<p>接下来的操作分为三步：</p>
<ol>
<li>确定本地是否已经有建立好的ssh key<!-- -->
<ul>
<li>打开git Bash（这里需要用到Bash, windows的cmd是没有ls命令的) 输入<code>ls -al ~/.ssh</code> 这里一个搜索命令，返回名称为<code>.ssh</code>的目录信息。如果有<code>id_rsa.pub</code>文件，就说明已经有ssh key了.</li>
</ul>
</li>
<li>如果没有，建立一组新的ssh key<!-- -->
<ul>
<li>执行命令<code>ssh-keygen -t rsa -b 4096 -C "your_email@example.com"</code>来生成一组ssh key，接下来直接按回车就可以了（文件位置使用默认位置不需要输入，passphrase默认空白，不设置，设置的话以后每次推送代码都要输密码）。</li>
<li>将生成的key登录到ssh-agent. 执行命令启动ssh-agent，windows：<code>eval $(ssh-agent -s)</code> Mac或者Linux：<code>eval "$(ssh-agent -s)"</code>.然后执行命令添加key，Mac：<code>ssh-add -K ~/.ssh/id_rsa</code> windows或者Linux：<code>ssh-add ~/.ssh/id_rsa</code></li>
</ul>
</li>
<li>将建立好的ssh key登录到github<!-- -->
<ul>
<li>将ssh key的内容复制到剪贴板. window可以使用命令：<code>clip &lt; ~/.ssh/id_rsa.pub</code> Mac可以使用：<code>pbcopy &lt; ~/.ssh/id_rsa.pub</code> Linux可以使用：<code>sudo apt-get install xclip</code> 和 <code>xclip -sel clip &lt; ~/.ssh/id_rsa.pub</code></li>
</ul>
</li>
</ol>
<p>添加到github这一步我们单独说一下，以防弄错。打开github页面，点击用户头像，进入<code>setting</code>，在菜单中间的位置找到<code>SSH and GPG keys</code>，点击右上角的绿色按钮<code>New SSH key</code>，在<code>Title</code>里填写要添加的ssh key的介绍，比如”公司那台贼慢的电脑/家里的老爷机/学校的大屁股显示器”,然后在将复制的SSH key粘贴到<code>Key</code>里面，点击<code>Add SSH key</code>就可以了。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="克隆项目代码">克隆项目代码<a href="https://frankelinli.github.io/blog/git%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E6%95%99%E7%A8%8B#%E5%85%8B%E9%9A%86%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81" class="hash-link" aria-label="克隆项目代码的直接链接" title="克隆项目代码的直接链接">​</a></h2>
<p>我们来到<code>GitHub</code>的代码页，可以在代码的右上角看到一个绿色按钮<code>Clone or Download</code>，点开之后可以看到克隆代码用的链接。</p>
<p>链接有两种，<code>https</code> 和 <code>ssh</code>， 简单来讲，使用https的链接克隆的项目需要用github的用户名密码来推送，使用ssh链接克隆的项目则使用ssh-key验证
<a href="https://xsun4231.github.io/2019/04/15/git-connect/usehttps.PNG" target="_blank" rel="noopener noreferrer"><img decoding="async" loading="lazy" src="https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/usehttps.PNG" alt="https" class="img_ev3q"></a></p>
<p><a href="https://xsun4231.github.io/2019/04/15/git-connect/usessh.PNG" target="_blank" rel="noopener noreferrer"><img decoding="async" loading="lazy" src="https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/usessh.PNG" alt="ssh" class="img_ev3q"></a></p>
<p>由于我们已经设置好了ssh-key，所以使用格式为<code>git@github.com:用户名/项目名.github.io.git</code>的ssh链接.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git clone git@github.com:用户名/项目名.github.io.git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="新建的repository">新建的repository<a href="https://frankelinli.github.io/blog/git%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E6%95%99%E7%A8%8B#%E6%96%B0%E5%BB%BA%E7%9A%84repository" class="hash-link" aria-label="新建的repository的直接链接" title="新建的repository的直接链接">​</a></h3>
<p>如果我们要将本地的工程文件推送到一个新建的GitHub库,首先确定两件事儿：</p>
<ol>
<li>GitHub上建立了一个空的库，README都没有的那种，可以看到这个页面<a href="https://xsun4231.github.io/2019/04/15/git-connect/new_repository.PNG" target="_blank" rel="noopener noreferrer"><img decoding="async" loading="lazy" src="https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/new_repository.PNG" alt="NEW" class="img_ev3q"></a></li>
<li>本地的工程文件初始化了git，并且没有关联其他的库. git的初始化可以使用<code>git init</code>命令，移除其他的关联，可以使用<code>git remote remove name</code> 这里的name一般是<code>origin</code>.</li>
</ol>
<p>然后执行下面的命令就可以了：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git commit -m "first commit"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git remote add origin ssh链接</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git push -u origin master</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="remote-和-local">remote 和 local<a href="https://frankelinli.github.io/blog/git%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E6%95%99%E7%A8%8B#remote-%E5%92%8C-local" class="hash-link" aria-label="remote 和 local的直接链接" title="remote 和 local的直接链接">​</a></h2>
<p>git管理的代码有两个地方:</p>
<ol>
<li>一个是<strong>remote</strong> 可以理解为远端，也就是指托管代码的地方，使用github时，值得也就是github服务器端</li>
<li>一个是<strong>local</strong> 直译本地，意译本地，他也就是本地的意思</li>
</ol>
<p>从远端向本地同步代码，叫做<code>pull</code> 也就是拉，将本地代码同步到远端，叫做<code>push</code> 推送，简单而形象。</p>
<p>local值不需要，当然也不能修改，因为代码就在本地. remote的值可以随时添加，删除或者修改，remote是name和url成对设置的，一般默认的remote名是origin</p>
<ul>
<li><code>git remote</code> 确认remote，会返回remote的名称</li>
<li><code>git remote get-url remoteName</code> 获得remote的url</li>
<li><code>git remote set-url remoteName url</code> 设置remote的url</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="branch">branch<a href="https://frankelinli.github.io/blog/git%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E6%95%99%E7%A8%8B#branch" class="hash-link" aria-label="branch的直接链接" title="branch的直接链接">​</a></h2>
<p>为了实现并行的开发，代码通过<code>branch</code>（分支）来进行管理，不妨branch理解成时间线、河流，可分成几个分支并行前进，也可以随时汇集到一起（只要内容没有冲突）。
可以通过<code>git branch</code>来查当前本地的分支。
切换分支的命令为 <code>git checkout "branch_name"</code>
常用的生成分支命令为 <code>git checkout -b "new_branch_name" "base_branch_name"</code>
使用<code>git branch "new_branch_name</code>也可以生成新的分支，不过该命令并不切换到新生成的分支.</p>
<ul>
<li>分支的名称不可以有空格，所以一般通过下划线连接单词，当分支名含有特殊符号比如 # 时，需要在分支名前后加 “ 来防止控制台执行时的歧义。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="commit">commit<a href="https://frankelinli.github.io/blog/git%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E6%95%99%E7%A8%8B#commit" class="hash-link" aria-label="commit的直接链接" title="commit的直接链接">​</a></h2>
<p>如果说branch是时间线，那么commit就是时间线上的存档点。刚刚创建或者修改完的文件，在git中并不算<strong>保存</strong>了，如果强行修改分支，这些内容就会丢失。将修改的内容保存到branch的记录中的操作，叫做<code>commit（提交）</code>.</p>
<p>执行commit之前，首先需要把准备提交的文件添加到提交名单，这个操作使用 <code>git add</code> 命令。
添加之前，可以通过<code>git status</code>命令来查看有哪些文件被修改了.</p>
<p>这里简单的从bash颜色上区分一下，
绿色的内容(Changes to be committed) 是已经准备好可以提交的内容，
红色的内容(Changes not staged for commit) 是还没有添加到提交列表的修改.</p>
<p>下面介绍几种简单常用的命令</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 将所有的修改添加到提交列表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git add --all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 将指定文件添加到提交列表，多个文件的时候使用空格区分</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git add aaa.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git add bbb.md ccc.md path/ddd.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 可以使用正规表达来指定多个文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git add a*.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git add path/\*.md</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>文件添加完，就可以执行commit来提交了：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 提交的时候，commit信息是必须的，可以直接使用-m 来指定commit信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git commit -m "在这里输入一条commit信息"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 使用github的时候，可以在commit信息里通过 #+编号 来关联Issue，这样提交的commit可以在Issue中直接找到。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git commit -m "#001 commmit信息"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="push">push<a href="https://frankelinli.github.io/blog/git%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E6%95%99%E7%A8%8B#push" class="hash-link" aria-label="push的直接链接" title="push的直接链接">​</a></h2>
<p>将remote的最新内容同步到本地的命令是<code>git pull</code>，将本地的修改推送到remote的命令是<code>git push</code>.</p>
<ul>
<li>出现冲突的时候可以加上<code>--force</code>来强制推送，不过这个操作不推荐，推送代码尽可能在解决冲突之后，使用最简单流畅的<code>git push</code></li>
</ul>
<p>推送命令的对象是分支，所以当我们推送本地创建的新分支时，需要指定一下这个分支在remote的信息：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># git push 推送命令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --set-upstream 告诉git 我要设置推送目的地</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># remotename 要推送到的remote名 一般是 origin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># branch_name 推送的branch名 含有特殊字符的话要用"branch_name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git push --set-upstream remotename branch_name</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>无论是切换分支，还是推送的时候，如果前面命令输入正确，git bash可以补全分支名。所以多用<code>tab</code>不仅方便，还能帮忙检查一下分支名前面的命令行有没有错。</li>
</ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[jiudian]]></title>
        <id>https://frankelinli.github.io/blog/jiudian</id>
        <link href="https://frankelinli.github.io/blog/jiudian"/>
        <updated>2024-03-18T20:25:41.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[20240317]]></title>
        <id>https://frankelinli.github.io/blog/2024/03/17/20240317</id>
        <link href="https://frankelinli.github.io/blog/2024/03/17/20240317"/>
        <updated>2024-03-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[word固定连接别再改动了。]]></summary>
        <content type="html"><![CDATA[<p>word固定连接别再改动了。</p>
<p>每天一个MD文件；</p>
<p>为了Npm run build快一点，图片都放在腾讯云对象存储了。不知道能多少花费；</p>
<p><img decoding="async" loading="lazy" src="https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/apple-touch-icon.png" alt="apple-touch-icon" class="img_ev3q"></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[20240316]]></title>
        <id>https://frankelinli.github.io/blog/2024/03/16/20240316</id>
        <link href="https://frankelinli.github.io/blog/2024/03/16/20240316"/>
        <updated>2024-03-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[发打发打发]]></summary>
        <content type="html"><![CDATA[<p>发打发打发</p>]]></content>
    </entry>
</feed>