{"archive":{"blogPosts":[{"id":"个人站长千万不要使用docusaurus建站的10个理由","metadata":{"permalink":"/blog/个人站长千万不要使用docusaurus建站的10个理由","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-19-个人站长千万不要使用docusaurus建站的10个理由.md","source":"@site/blog/2024/06-19-个人站长千万不要使用docusaurus建站的10个理由.md","title":"个人站长千万不要使用docusaurus建站的10个理由","description":"如果你决定使用 Docusaurus 来构建你的网站，确实有一些潜在的困难和挑战需要考虑。以下是一些你可能会遇到的问题，以及为什么这些问题可能会让你重新考虑使用 Docusaurus。","date":"2024-06-19T17:06:00.000Z","tags":[],"readingTime":6.97,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-19 17:06","slug":"个人站长千万不要使用docusaurus建站的10个理由"},"unlisted":false,"lastUpdatedAt":1539502055000,"nextItem":{"title":"个人站长选择WordPress还是docusaurus","permalink":"/blog/个人站长选择WordPress还是docusaurus"}},"content":"如果你决定使用 Docusaurus 来构建你的网站，确实有一些潜在的困难和挑战需要考虑。以下是一些你可能会遇到的问题，以及为什么这些问题可能会让你重新考虑使用 Docusaurus。\r\n\r\n<!-- truncate -->\r\n\r\n### 1. **功能有限**\r\n\r\n**困难**：\r\n- Docusaurus 主要是为文档和技术博客设计的，功能相对单一。如果你需要一个复杂的网站，比如具有电子商务功能、社交网络功能或复杂的交互功能，Docusaurus 可能无法满足这些需求。\r\n\r\n**劝退理由**：\r\n- 如果你希望网站能不断扩展并增加复杂功能，那么 Docusaurus 的局限性可能会让你感到受限。选择一个更加多功能的平台（如 WordPress）会更适合你的长期需求。\r\n\r\n### 2. **需要前端开发知识**\r\n\r\n**困难**：\r\n- Docusaurus 是基于 React 的静态网站生成器，这意味着你需要具备一定的前端开发知识，特别是对 React 和 JavaScript 的了解。如果你对前端开发不熟悉，学习曲线会比较陡峭。\r\n\r\n**劝退理由**：\r\n- 如果你没有前端开发经验，那么使用 Docusaurus 可能会让你在初期遇到较大的技术障碍。相比之下，WordPress 对非技术用户更加友好，可以让你更快地上手并管理网站。\r\n\r\n### 3. **社区和资源相对较少**\r\n\r\n**困难**：\r\n- 虽然 Docusaurus 有一定的用户群体和开发者社区，但与 WordPress 相比，规模要小得多。这意味着你在遇到问题时，可能很难找到现成的解决方案和帮助。\r\n\r\n**劝退理由**：\r\n- 如果你依赖社区支持和在线资源来解决问题，那么较小的社区规模可能会让你在使用 Docusaurus 时感到孤立和无助。WordPress 拥有一个庞大的社区和丰富的资源，可以更好地支持你。\r\n\r\n### 4. **插件和主题选择有限**\r\n\r\n**困难**：\r\n- Docusaurus 的插件和主题生态系统远不及 WordPress 丰富。虽然有一些开源插件和主题可供选择，但数量和多样性都有限，可能无法满足你所有的需求。\r\n\r\n**劝退理由**：\r\n- 如果你希望通过插件和主题来快速扩展网站功能和设计，那么 Docusaurus 的选择有限可能会让你失望。WordPress 提供了成千上万的插件和主题，可以满足各种需求。\r\n\r\n### 5. **维护和部署复杂**\r\n\r\n**困难**：\r\n- 虽然 Docusaurus 生成的是静态网站，理论上维护和部署比较简单，但在实际操作中，你可能需要配置 CI/CD 管道、处理版本控制、管理依赖等，对技术要求较高。\r\n\r\n**劝退理由**：\r\n- 如果你不熟悉 DevOps 和前端开发工具链，那么这些技术要求可能会让你感到困惑和不知所措。WordPress 的托管服务和管理界面更加直观，适合技术背景较少的用户。\r\n\r\n### 6. **不适合非文档类网站**\r\n\r\n**困难**：\r\n- Docusaurus 专注于文档和博客，对于其他类型的网站（如电子商务、社交平台、复杂的企业网站）支持不足。如果你需要打造一个多功能的综合性网站，Docusaurus 很难满足你的需求。\r\n\r\n**劝退理由**：\r\n- 如果你的网站不仅仅是技术文档或博客，而是需要更多的互动和功能，那么 Docusaurus 的局限性会对你造成很大的困扰。WordPress 则能提供全面的支持和扩展性。\r\n\r\n### 结论\r\n\r\n虽然 Docusaurus 是一个出色的静态网站生成器，特别适合技术文档和开发者博客，但它的局限性和技术要求可能会成为你的绊脚石。考虑到你作为个人站长可能需要一个功能全面、易于使用且资源丰富的平台，**我强烈建议你选择 WordPress** 来搭建和管理你的网站。WordPress 可以提供更加广泛的功能、友好的用户界面和庞大的社区支持，让你可以专注于内容创作和网站运营，而不必担心技术难题。\r\n\r\n\r\n\r\n### 骂醒版：\r\n\r\n你要是还想着用 Docusaurus，那我真是服了你了！别做梦了，老兄！你知道 Docusaurus 是干嘛的吗？它就是个给技术文档和博客用的玩意儿，功能单一得要命！你要是想搞个复杂点的网站，它根本就不行！\r\n\r\n你有前端开发经验吗？没有吧？那你用 Docusaurus 就等着天天掉头发吧！你以为学 React 和 JavaScript 是那么容易的事儿吗？别天真了！你用 WordPress，点点鼠标就能搞定的事儿，非得自虐去写代码？\r\n\r\n还有，Docusaurus 的插件和主题少得可怜，能满足你所有需求？别开玩笑了！你要是想要什么功能，WordPress 的插件库里随便挑，Docusaurus 有什么？挠破头皮也找不到几个像样的插件！\r\n\r\n你还指望社区帮忙？Docusaurus 那小社区，问个问题得等到天荒地老。WordPress 的社区大得多，有问题三分钟内就能找到答案，你非得去找罪受？\r\n\r\n最后，Docusaurus 适合你吗？你的网站是个综合性的，不是单纯的技术文档，Docusaurus 根本不适合你！看清现实吧，别再执迷不悟了，赶紧用 WordPress，省心省力，少走弯路！\r\n\r\n所以，别再犹豫了，抛弃 Docusaurus，拥抱 WordPress 吧！这才是你明智的选择！"},{"id":"个人站长选择WordPress还是docusaurus","metadata":{"permalink":"/blog/个人站长选择WordPress还是docusaurus","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-19-个人站长选择WordPress还是docusaurus.md","source":"@site/blog/2024/06-19-个人站长选择WordPress还是docusaurus.md","title":"个人站长选择WordPress还是docusaurus","description":"WordPress 与 Docusaurus：全面分析与选择","date":"2024-06-19T17:01:00.000Z","tags":[],"readingTime":8.675,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-19 17:01","slug":"个人站长选择WordPress还是docusaurus"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"个人站长千万不要使用docusaurus建站的10个理由","permalink":"/blog/个人站长千万不要使用docusaurus建站的10个理由"},"nextItem":{"title":"在WordPress页面添加音乐播放器区块","permalink":"/blog/在WordPress页面添加音乐播放器区块"}},"content":"### WordPress 与 Docusaurus：全面分析与选择\r\n\r\n作为一个个人站长，选择合适的工具来搭建你的网站非常重要。WordPress 和 Docusaurus 是两种非常不同的工具，它们各自有着独特的优势和适用场景。下面是对这两种工具的全面分析，帮助你做出最佳选择。\r\n\r\n<!-- truncate -->\r\n\r\n#### WordPress\r\n\r\n**优点**：\r\n1. **广泛使用**：\r\n   - WordPress 是世界上最流行的内容管理系统（CMS），拥有庞大的用户和开发者社区。\r\n   \r\n2. **丰富的插件和主题**：\r\n   - 有成千上万的插件和主题可供选择，几乎可以满足任何功能和设计需求。\r\n   \r\n3. **用户友好**：\r\n   - 直观的后台管理界面，即使没有技术背景的用户也可以轻松上手。\r\n\r\n4. **强大的生态系统**：\r\n   - 支持电子商务（如 WooCommerce）、社交网络、会员系统等功能，适用于各种类型的网站。\r\n\r\n5. **SEO 友好**：\r\n   - 有许多插件和内置功能可以帮助优化搜索引擎排名。\r\n\r\n**缺点**：\r\n1. **安全性问题**：\r\n   - 由于其流行度，WordPress 网站常成为攻击目标，需要定期更新和良好的安全实践。\r\n\r\n2. **性能问题**：\r\n   - 插件和主题的滥用可能导致网站变慢，需要优化和缓存机制来提升性能。\r\n\r\n3. **维护成本**：\r\n   - 需要定期更新插件、主题和核心系统，且可能需要应对兼容性问题。\r\n\r\n#### Docusaurus\r\n\r\n**优点**：\r\n1. **静态网站生成**：\r\n   - Docusaurus 是一个静态网站生成器，生成的 HTML 文件可以直接部署到任何静态网站托管服务上，性能极佳。\r\n\r\n2. **简单易用**：\r\n   - 特别适合文档类网站或技术博客，Markdown 格式的内容编写非常友好。\r\n\r\n3. **内置优化**：\r\n   - 具备良好的 SEO 支持，自动生成的 sitemap 和 RSS feed，有助于搜索引擎抓取。\r\n\r\n4. **开发者友好**：\r\n   - 基于 React，前端开发者可以轻松定制和扩展网站功能。\r\n\r\n5. **开箱即用的主题和插件**：\r\n   - 内置一系列主题和插件，可以快速启动并配置网站。\r\n\r\n**缺点**：\r\n1. **功能有限**：\r\n   - 主要适用于文档和博客网站，对于复杂的动态网站（如电子商务、社交网络）支持有限。\r\n\r\n2. **学习曲线**：\r\n   - 需要一定的前端开发知识，特别是 React 和 JavaScript。\r\n\r\n3. **较少的插件和主题**：\r\n   - 尽管有一些开箱即用的插件和主题，但远不及 WordPress 的丰富度。\r\n\r\n### 适用场景\r\n\r\n**WordPress 适用场景**：\r\n- **个人博客**：丰富的主题和插件可以让你快速搭建一个功能完善的个人博客。\r\n- **企业网站**：可扩展性强，适合需要复杂功能的企业网站。\r\n- **电子商务**：通过 WooCommerce，WordPress 可以轻松变身为功能强大的在线商店。\r\n- **社交网络**：可以通过插件实现社交网络功能。\r\n\r\n**Docusaurus 适用场景**：\r\n- **技术文档**：非常适合技术文档网站，支持版本控制和多语言。\r\n- **技术博客**：如果你是开发者，Docusaurus 可以帮助你快速搭建一个高性能、易维护的技术博客。\r\n- **开源项目网站**：特别适合为开源项目创建文档和博客。\r\n\r\n### 综合分析与选择\r\n\r\n**选择 WordPress 的理由**：\r\n- 如果你需要一个功能丰富、易于扩展的博客或企业网站，并且希望有大量现成的插件和主题来快速实现各种功能，WordPress 是一个理想的选择。\r\n- 如果你对技术不太熟悉，WordPress 的用户友好界面可以让你轻松管理网站内容和设置。\r\n\r\n**选择 Docusaurus 的理由**：\r\n- 如果你的主要目标是创建一个技术文档网站或技术博客，并且你对前端开发有一定了解，Docusaurus 是一个非常合适的选择。\r\n- 如果你重视网站的性能和 SEO，Docusaurus 生成的静态网站可以大幅提升加载速度和搜索引擎友好性。\r\n\r\n### 综合答案\r\n\r\n**建议选择**：**WordPress**\r\n\r\n**理由**：\r\n- 作为个人站长，你可能需要一个功能全面的解决方案，尤其是在你需要快速搭建并管理一个多功能的博客或企业网站时。WordPress 提供了一个成熟且广泛支持的生态系统，可以满足你几乎所有的需求，无论是简单的博客，还是复杂的企业网站。即使你没有太多的技术背景，WordPress 的用户友好界面和丰富的资源也能让你轻松上手。\r\n\r\n  ### 更详细的理由和建议\r\n\r\n  #### 1. **用户友好和易用性**\r\n  WordPress 的后台管理界面设计得非常直观，适合非技术用户。你可以通过可视化编辑器轻松创建和编辑内容，不需要编写代码。即使遇到问题，也有丰富的资源（教程、论坛、支持文档）可以帮助你解决。\r\n\r\n  #### 2. **丰富的插件和主题**\r\n  无论你需要什么功能，几乎都能找到现成的插件来实现。例如，SEO 插件（如 Yoast SEO）、安全插件（如 Wordfence Security）、性能优化插件（如 WP Super Cache）等，可以大大简化网站管理和优化。\r\n\r\n  #### 3. **SEO 和营销工具**\r\n  WordPress 的生态系统提供了强大的 SEO 工具和集成，可以帮助你优化网站的搜索引擎排名。此外，各种营销插件（如邮件订阅、社交媒体集成、分析工具）可以帮助你更好地推广网站和分析用户行为。\r\n\r\n  #### 4. **多功能性和扩展性**\r\n  如果你计划将来扩展网站功能（如增加电商功能、会员系统、论坛等），WordPress 都能通过插件实现。这种灵活性使得你可以随着需求的变化不断扩展网站功能，而不需要重新选择平台。\r\n\r\n  #### 5. **社区支持和资源**\r\n  WordPress 拥有一个庞大的用户和开发者社区。如果你遇到问题，可以很容易地找到解决方案或获取帮助。各种在线资源（如教程、博客、视频）也能帮助你更好地使用和优化 WordPress。\r\n\r\n  ### 总结\r\n\r\n  **选择 WordPress 作为你的个人站长项目的主要平台**，可以让你充分利用其丰富的插件和主题生态系统，快速搭建和管理一个功能全面的网站。尽管 Docusaurus 在性能和技术文档方面有其独特优势，但如果你需要一个更加多功能且用户友好的解决方案，WordPress 无疑是更好的选择。\r\n\r\n  **最终建议**：**选择 WordPress** 来搭建和管理你的网站，特别是如果你需要一个功能丰富、易于扩展且用户友好的平台。"},{"id":"在WordPress页面添加音乐播放器区块","metadata":{"permalink":"/blog/在WordPress页面添加音乐播放器区块","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-18-在WordPress页面添加音乐播放器区块.md","source":"@site/blog/2024/06-18-在WordPress页面添加音乐播放器区块.md","title":"在WordPress页面添加音乐播放器区块","description":"我有WordPress子主题，请帮我用aplayer JS来实现在网页左下角添加播放区块：","date":"2024-06-18T13:58:00.000Z","tags":[],"readingTime":2.65,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-18 13:58","slug":"在WordPress页面添加音乐播放器区块"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"个人站长选择WordPress还是docusaurus","permalink":"/blog/个人站长选择WordPress还是docusaurus"},"nextItem":{"title":"给WordPress标题前面加个一色块","permalink":"/blog/给WordPress标题前面加个一色块"}},"content":"我有WordPress子主题，请帮我用aplayer JS来实现在网页左下角添加播放区块：\r\n\r\n好的，下面是如何在WordPress子主题中添加APlayer播放区块的步骤。\r\n\r\n### 1. 下载和引入APlayer资源\r\n\r\n首先，你需要下载APlayer的JavaScript和CSS文件，并将其放入你的子主题目录中。你可以从[APlayer的GitHub页面](https://github.com/MoePlayer/APlayer)下载这些文件，或者使用CDN。\r\n\r\n### 2. 引入APlayer的CSS和JS\r\n\r\n<!-- truncate -->\r\n\r\n在你的子主题的`functions.php`文件中添加以下代码，以便在WordPress中加载APlayer的CSS和JS文件：[首页 - APlayer](https://aplayer.js.org/#/zh-Hans/?id=cdn)\r\n\r\n```php\r\nfunction enqueue_aplayer_scripts() {\r\n    // APlayer CSS\r\n    wp_enqueue_style('aplayer-css', 'https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.css');\r\n\r\n    // APlayer JS\r\n    wp_enqueue_script('aplayer-js', 'https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.js', array(), null, true);\r\n}\r\nadd_action('wp_enqueue_scripts', 'enqueue_aplayer_scripts');\r\n```\r\n\r\n### 3. 创建播放区块容器\r\n\r\n在你的子主题的模板文件（例如`footer.php`）中添加一个用于APlayer的HTML容器：\r\n\r\n```html\r\n<div id=\"aplayer\" class=\"aplayer\"></div>\r\n```\r\n\r\n### 4. 初始化APlayer\r\n\r\n接下来，在你的子主题的JavaScript文件中（例如`custom.js`，你需要确保该文件已经在`functions.php`中被正确加载），初始化APlayer：\r\n\r\n```javascript\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    const ap = new APlayer({\r\n        container: document.getElementById('aplayer'),\r\n        fixed: true, // 固定在页面底部\r\n        audio: [{\r\n            name: 'Song Title',\r\n            artist: 'Artist Name',\r\n            url: 'path/to/your/audio/file.mp3',\r\n            cover: 'path/to/your/cover/image.jpg'\r\n        }]\r\n    });\r\n});\r\n```\r\n\r\n### 5. 确保自定义JavaScript文件加载\r\n\r\n在你的`functions.php`文件中，确保加载了自定义的JavaScript文件：\r\n\r\n```php\r\nfunction enqueue_custom_scripts() {\r\n    // 你的自定义JS文件\r\n    wp_enqueue_script('custom-js', get_stylesheet_directory_uri() . '/custom.js', array('jquery', 'aplayer-js'), null, true);\r\n}\r\nadd_action('wp_enqueue_scripts', 'enqueue_custom_scripts');\r\n```\r\n\r\n### 6. 完成\r\n\r\n以上步骤完成后，你应该能够在你的网站左下角看到APlayer播放区块。你可以根据需要调整CSS样式和JavaScript配置来满足你的需求。\r\n\r\n如果你有任何问题或需要进一步的帮助，请告诉我！\r\n\r\n---\r\n\r\n以上代码，网页刷新后，音乐就停止了，而且要从头开始播放。\r\n\r\n一个简单的刷新网页，继续播放的方案,，使用localStorage\r\n\r\n```js\r\n<audio id=\"myAudio\" controls>\r\n  <source src=\"https://spacexcode.oss-cn-hangzhou.aliyuncs.com/mp3/那女孩对我说.mp3\" type=\"audio/mpeg\">\r\n  Your browser does not support the audio element.\r\n</audio>\r\n\r\n<script>\r\nwindow.onload = function() {\r\n  var audio = document.getElementById(\"myAudio\");\r\n  var playedTime = localStorage.getItem(\"playedTime\");\r\n  \r\n  if (playedTime) {\r\n    audio.currentTime = parseFloat(playedTime);\r\n    audio.play();\r\n  }\r\n\r\n  audio.addEventListener('timeupdate', function() {\r\n    localStorage.setItem(\"playedTime\", audio.currentTime);\r\n  });\r\n  \r\n  audio.addEventListener('ended', function() {\r\n    localStorage.removeItem(\"playedTime\");\r\n  });\r\n};\r\n</script>\r\n```"},{"id":"给WordPress标题前面加个一色块","metadata":{"permalink":"/blog/给WordPress标题前面加个一色块","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-17-给WordPress标题前面加个一色块.md","source":"@site/blog/2024/06-17-给WordPress标题前面加个一色块.md","title":"给WordPress标题前面加个一色块","description":"为了给WordPress网站中所有的`到`标题前面添加一个色块，可以通过自定义CSS和jQuery来实现。以下是详细步骤：","date":"2024-06-17T21:54:00.000Z","tags":[],"readingTime":1.725,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-17 21:54","slug":"给WordPress标题前面加个一色块"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"在WordPress页面添加音乐播放器区块","permalink":"/blog/在WordPress页面添加音乐播放器区块"},"nextItem":{"title":"WordPress子主题给全站图片增加特效","permalink":"/blog/WordPress子主题给全站图片增加特效"}},"content":"为了给WordPress网站中所有的`<h2>`到`<h6>`标题前面添加一个色块，可以通过自定义CSS和jQuery来实现。以下是详细步骤：\r\n\r\n### 步骤 1：创建并加载自定义CSS和JavaScript文件\r\n\r\n#### 1. 创建并编辑自定义CSS文件\r\n\r\n在您的子主题目录中创建一个CSS文件，例如 `custom.css`，并添加以下样式：\r\n\r\n<!-- truncate -->\r\n\r\n```css\r\n/* 给标题添加色块的样式 */\r\n.heading-color-block {\r\n    position: relative;\r\n    padding-left: 25px; /* 调整这个值来适应色块的宽度 */\r\n}\r\n\r\n.heading-color-block::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    width: 15px; /* 色块的宽度 */\r\n    height: 15px; /* 色块的高度 */\r\n    background-color: #3498db; /* 色块的颜色 */\r\n}\r\n```\r\n\r\n#### 2. 创建并编辑自定义JavaScript文件\r\n在您的子主题目录中创建一个JavaScript文件，例如 `custom.js`，并添加以下代码：\r\n\r\n```javascript\r\njQuery(document).ready(function($) {\r\n    $('h2, h3, h4, h5, h6').addClass('heading-color-block');\r\n});\r\n```\r\n\r\n### 步骤 2：在子主题中加载自定义CSS和JavaScript\r\n\r\n[这一步不用每次都改变，有一次就够了]\r\n\r\n### 验证效果\r\n\r\n启用子主题后，浏览您的网站，检查`<h2>`到`<h6>`标题前是否正确添加了色块。如果所有步骤正确完成，所有这些标题前都应该显示色块。\r\n\r\n通过以上步骤，您可以在WordPress子主题中为全站的`<h2>`到`<h6>`标题前添加色块，实现自定义的显示效果。"},{"id":"WordPress子主题给全站图片增加特效","metadata":{"permalink":"/blog/WordPress子主题给全站图片增加特效","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-17-WordPress子主题给全站图片增加特效.md","source":"@site/blog/2024/06-17-WordPress子主题给全站图片增加特效.md","title":"WordPress子主题给全站图片增加特效","description":"使用jQuery可以简化JavaScript代码的编写，使其更加简洁和易于阅读。尽管近年来原生JavaScript的功能得到了极大的增强，并且许多现代Web开发框架（如React和Vue.js）提供了更高层次的抽象，但jQuery在某些情况下仍然很流行，特别是在维护旧项目或者在需要快速实现简单交互效果时。","date":"2024-06-17T21:39:00.000Z","tags":[],"readingTime":2.43,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-17 21:39","slug":"WordPress子主题给全站图片增加特效"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"给WordPress标题前面加个一色块","permalink":"/blog/给WordPress标题前面加个一色块"},"nextItem":{"title":"用WordPress子主题实现网页底部弹窗并可以关闭","permalink":"/blog/用WordPress子主题实现网页底部弹窗并可以关闭"}},"content":"使用jQuery可以简化JavaScript代码的编写，使其更加简洁和易于阅读。尽管近年来原生JavaScript的功能得到了极大的增强，并且许多现代Web开发框架（如React和Vue.js）提供了更高层次的抽象，但jQuery在某些情况下仍然很流行，特别是在维护旧项目或者在需要快速实现简单交互效果时。\r\n\r\n下面是如何使用jQuery简化实现全站图片悬停时的卡片式立体弹出效果的代码：\r\n\r\n<!-- truncate -->\r\n\r\n### 步骤 1：添加自定义CSS\r\n\r\n首先，在子主题的 `style.css` 文件中添加CSS样式：\r\n\r\n```css\r\n/* 图片悬停效果 */\r\nimg.hover-effect {\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\nimg.hover-effect:hover {\r\n    transform: translateY(-10px) scale(1.1);\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\r\n}\r\n```\r\n\r\n### 步骤 2：添加jQuery代码\r\n接下来，在子主题文件夹中创建一个新的jQuery文件，例如 `hover-effect.js`，并添加以下代码：\r\n\r\n```javascript\r\njQuery(document).ready(function($) {\r\n    $('img').addClass('hover-effect');\r\n});\r\n```\r\n\r\n### 综合步骤回顾\r\n\r\n1. **编辑 `style.css` 文件**：添加悬停效果的CSS样式。\r\n2. **创建 `hover-effect.js` 文件**：编写jQuery代码，将CSS类应用到全站的图片上。\r\n3. **编辑 `functions.php` 文件**：加载jQuery和自定义JavaScript文件。\r\n\r\n### 关于jQuery的流行度\r\n尽管原生JavaScript的发展使得许多jQuery的功能可以通过纯JavaScript来实现，但jQuery仍然在一些情况下被广泛使用，特别是：\r\n\r\n- **维护旧项目**：许多旧项目依赖jQuery，完全移除它们需要大量的重构工作。\r\n- **简单快速的解决方案**：对于简单的DOM操作和事件处理，jQuery仍然是一个方便的选择。\r\n- **插件生态系统**：jQuery拥有丰富的插件生态系统，许多插件和库仍然依赖jQuery。\r\n\r\n然而，对于新项目，特别是大型和复杂的应用，现代JavaScript框架和库如React、Vue.js和Angular通常是更好的选择。"},{"id":"用WordPress子主题实现网页底部弹窗并可以关闭","metadata":{"permalink":"/blog/用WordPress子主题实现网页底部弹窗并可以关闭","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-17-用WordPress子主题实现网页底部弹窗并可以关闭.md","source":"@site/blog/2024/06-17-用WordPress子主题实现网页底部弹窗并可以关闭.md","title":"用WordPress子主题实现网页底部弹窗并可以关闭","description":"问题：","date":"2024-06-17T12:43:00.000Z","tags":[],"readingTime":2.12,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-17 12:43","slug":"用WordPress子主题实现网页底部弹窗并可以关闭"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"WordPress子主题给全站图片增加特效","permalink":"/blog/WordPress子主题给全站图片增加特效"},"nextItem":{"title":"WordPress子主题实现首页浮动提示框","permalink":"/blog/WordPress子主题实现首页浮动提示框"}},"content":"#### 问题：\r\n\r\n1. **如何用WordPress子主题实现底部弹出通知并且可以关闭**：\r\n   - 页面加载时在底部显示一个通知框。\r\n   - 用户点击关闭按钮后，通知框隐藏并且不再显示。\r\n\r\n#### 答案：\r\n\r\n\r\n\r\n<!-- truncate -->\r\n\r\n1. **创建子主题的基本结构**：\r\n   - 在 `wp-content/themes` 目录下创建 `child-theme` 文件夹。\r\n   - 创建 `style.css` 文件，并添加以下内容：\r\n     ```css\r\n     /*\r\n     Theme Name: Child Theme\r\n     Template: parent-theme\r\n     */\r\n     ```\r\n\r\n2. **创建 `functions.php` 文件**：\r\n   ```php\r\n   <?php\r\n   function child_theme_enqueue_styles() {\r\n       wp_enqueue_style('parent-style', get_template_directory_uri() . '/style.css');\r\n   }\r\n   add_action('wp_enqueue_scripts', 'child_theme_enqueue_styles');\r\n   \r\n   function child_theme_enqueue_scripts() {\r\n       wp_enqueue_script('child-theme-script', get_stylesheet_directory_uri() . '/js/popup.js', array('jquery'), null, true);\r\n   }\r\n   add_action('wp_enqueue_scripts', 'child_theme_enqueue_scripts');\r\n   ```\r\n\r\n3. **在 `footer.php` 文件中添加通知的HTML结构**：\r\n   ```html\r\n   <div class=\"popup-notification\" id=\"popup-notification\">\r\n       <div class=\"popup-content\">\r\n           <p>Welcome to x.com!<br>\r\n           We are letting you know that we are changing our URL, but your privacy and data protection settings remain the same.<br>\r\n           For more details, see our Privacy Policy: <a href=\"https://x.com/en/privacy\" target=\"_blank\">https://x.com/en/privacy</a></p>\r\n           <button class=\"close-popup\" id=\"close-popup\">&times;</button>\r\n       </div>\r\n   </div>\r\n   ```\r\n\r\n4. **在 `style.css` 文件中添加CSS样式**：\r\n   ```css\r\n   .popup-notification {\r\n       position: fixed;\r\n       bottom: 0;\r\n       left: 0;\r\n       width: 100%;\r\n       background-color: #fff;\r\n       box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\r\n       padding: 15px;\r\n       display: none;\r\n       z-index: 1000;\r\n   }\r\n   \r\n   .popup-content {\r\n       max-width: 800px;\r\n       margin: 0 auto;\r\n       text-align: center;\r\n       position: relative;\r\n   }\r\n   \r\n   .popup-content p {\r\n       margin: 0;\r\n       font-size: 16px;\r\n   }\r\n   \r\n   .popup-content a {\r\n       color: #0073aa;\r\n       text-decoration: none;\r\n   }\r\n   \r\n   .popup-content a:hover {\r\n       text-decoration: underline;\r\n   }\r\n   \r\n   .close-popup {\r\n       position: absolute;\r\n       top: 50%;\r\n       right: 15px;\r\n       transform: translateY(-50%);\r\n       background: none;\r\n       border: none;\r\n       font-size: 20px;\r\n       cursor: pointer;\r\n       color: #000;\r\n   }\r\n   ```\r\n\r\n5. **在 `child-theme` 文件夹中创建 `js` 文件夹和 `popup.js` 文件**，并添加如下代码：\r\n   ```javascript\r\n   jQuery(document).ready(function($) {\r\n       // 检查本地存储中是否存在关闭标记\r\n       if (localStorage.getItem('popupClosed') !== 'true') {\r\n           // 显示通知\r\n           $('#popup-notification').fadeIn();\r\n       }\r\n   \r\n       // 点击关闭按钮时隐藏通知并设置本地存储标记\r\n       $('#close-popup').click(function() {\r\n           $('#popup-notification').fadeOut();\r\n           localStorage.setItem('popupClosed', 'true');\r\n       });\r\n   });\r\n   ```\r\n\r\n通过这些步骤，您可以在WordPress子主题中添加一个底部弹出通知，并确保用户关闭一次后不再显示。"},{"id":"WordPress子主题实现首页浮动提示框","metadata":{"permalink":"/blog/WordPress子主题实现首页浮动提示框","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-17-WordPress子主题实现首页浮动提示框.md","source":"@site/blog/2024/06-17-WordPress子主题实现首页浮动提示框.md","title":"WordPress子主题实现首页浮动提示框","description":"问题","date":"2024-06-17T00:48:00.000Z","tags":[],"readingTime":2.99,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-17 00:48","slug":"WordPress子主题实现首页浮动提示框"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"用WordPress子主题实现网页底部弹窗并可以关闭","permalink":"/blog/用WordPress子主题实现网页底部弹窗并可以关闭"},"nextItem":{"title":"整站变黑白","permalink":"/blog/整站变黑白"}},"content":"### 问题\r\n\r\n1. **在Astra子主题中制作一个浮动的提醒文字DIV，显示报名时间开始和截至日期，并在首页浮动。**\r\n2. **使该浮动DIV可以在主屏四处移动，提醒的文字要醒目。**\r\n3. **浮动DIV在屏幕上自动移动，而不是通过拖拽。**\r\n4. **当鼠标悬停在浮动DIV上时，该DIV停止移动，鼠标移开时恢复移动。**\r\n\r\n### 解决方案\r\n#### 1. 在子主题中添加CSS和JavaScript文件\r\n在您的子主题目录中，创建一个 `style.css` 文件和一个 `script.js` 文件。\r\n\r\n<!-- truncate -->\r\n\r\n#### 2. 修改 `functions.php` 文件\r\n\r\n确保子主题的 `functions.php` 文件中排队添加您的CSS和JavaScript文件：\r\n\r\n```php\r\n<?php\r\nfunction enqueue_child_theme_styles() {\r\n    // Enqueue parent styles\r\n    wp_enqueue_style('parent-style', get_template_directory_uri() . '/style.css');\r\n    \r\n    // Enqueue child styles\r\n    wp_enqueue_style('child-style', get_stylesheet_directory_uri() . '/style.css', array('parent-style'));\r\n\r\n    // Enqueue custom script\r\n    wp_enqueue_script('custom-script', get_stylesheet_directory_uri() . '/script.js', array('jquery'), null, true);\r\n}\r\nadd_action('wp_enqueue_scripts', 'enqueue_child_theme_styles');\r\n```\r\n\r\n#### 3. 添加样式 (`style.css`)\r\n\r\n确保浮动DIV的样式醒目并适合在屏幕四处移动：\r\n\r\n```css\r\n.floating-reminder {\r\n    position: fixed;\r\n    background-color: rgba(255, 0, 0, 0.8); /* 红色背景，更加醒目 */\r\n    padding: 20px;\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n    border-radius: 5px;\r\n    z-index: 1000;\r\n    max-width: 300px;\r\n    text-align: center;\r\n    color: #fff; /* 白色文字 */\r\n    font-size: 20px; /* 加大字体 */\r\n    font-weight: bold; /* 加粗字体 */\r\n}\r\n```\r\n\r\n#### 4. 添加JavaScript代码 (`script.js`)\r\n\r\n使浮动DIV自动在屏幕四处移动，并在鼠标悬停时停止移动，鼠标移开时恢复移动：\r\n\r\n```js\r\njQuery(document).ready(function($) {\r\n    var reminderContent = `\r\n        <div class=\"floating-reminder\">\r\n            <h2>提醒</h2>\r\n            <p>报名时间开始日期：2024-06-20</p>\r\n            <p>报名时间截至日期：2024-07-10</p>\r\n        </div>\r\n    `;\r\n\r\n    $('body').append(reminderContent);\r\n\r\n    var $reminder = $('.floating-reminder');\r\n    var directionX = 1;\r\n    var directionY = 1;\r\n    var speed = 0.5; // 调整移动速度\r\n\r\n    var isHovered = false;\r\n\r\n    function moveReminder() {\r\n        if (!isHovered) {\r\n            var windowWidth = $(window).width();\r\n            var windowHeight = $(window).height();\r\n            var reminderWidth = $reminder.outerWidth();\r\n            var reminderHeight = $reminder.outerHeight();\r\n            var currentLeft = $reminder.offset().left;\r\n            var currentTop = $reminder.offset().top;\r\n\r\n            if (currentLeft <= 0 || currentLeft + reminderWidth >= windowWidth) {\r\n                directionX *= -1; // 反转水平方向\r\n            }\r\n            if (currentTop <= 0 || currentTop + reminderHeight >= windowHeight) {\r\n                directionY *= -1; // 反转垂直方向\r\n            }\r\n\r\n            $reminder.css({\r\n                left: currentLeft + directionX * speed,\r\n                top: currentTop + directionY * speed\r\n            });\r\n        }\r\n\r\n        requestAnimationFrame(moveReminder);\r\n    }\r\n\r\n    // 初始化位置\r\n    $reminder.css({\r\n        left: ($(window).width() - $reminder.outerWidth()) / 2,\r\n        top: ($(window).height() - $reminder.outerHeight()) / 2\r\n    });\r\n\r\n    $reminder.hover(\r\n        function() {\r\n            isHovered = true; // 鼠标悬停时停止移动\r\n        },\r\n        function() {\r\n            isHovered = false; // 鼠标移开时恢复移动\r\n        }\r\n    );\r\n\r\n    moveReminder();\r\n});\r\n```\r\n\r\n### 5. 确保子主题激活\r\n\r\n确保您的子主题已经在WordPress后台激活。如果还没有激活，请前往`外观 -> 主题`，然后激活您的子主题。"},{"id":"整站变黑白","metadata":{"permalink":"/blog/整站变黑白","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-16-整站变黑白.md","source":"@site/blog/2024/06-16-整站变黑白.md","title":"整站变黑白","description":"要实现整个 WordPress 网站变成黑白效果，可以通过添加自定义的 CSS 样式来实现。使用 CSS 的 filter 属性可以很容易地将页面的所有颜色转换为黑白。具体步骤如下：","date":"2024-06-16T23:05:00.000Z","tags":[],"readingTime":1.775,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-16 23:05","slug":"整站变黑白"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"WordPress子主题实现首页浮动提示框","permalink":"/blog/WordPress子主题实现首页浮动提示框"},"nextItem":{"title":"WordPress给鼠标点击添加颜色效果","permalink":"/blog/WordPress给鼠标点击添加颜色效果"}},"content":"要实现整个 WordPress 网站变成黑白效果，可以通过添加自定义的 CSS 样式来实现。使用 CSS 的 `filter` 属性可以很容易地将页面的所有颜色转换为黑白。具体步骤如下：\r\n\r\n### 1. 添加自定义 CSS\r\n\r\n#### 方法一：通过主题的自定义 CSS\r\n\r\n你可以直接在 WordPress 管理后台的 **外观 > 自定义 > 额外 CSS** 中添加以下 CSS 代码：\r\n\r\n```css\r\nhtml {\r\n    filter: grayscale(100%);\r\n}\r\n```\r\n\r\n<!-- truncate -->\r\n\r\n#### 方法二：通过子主题的 CSS 文件\r\n\r\n如果你使用子主题并希望将这个效果添加到子主题中，请按照以下步骤操作：\r\n\r\n1. 打开你的子主题目录。\r\n2. 找到 `style.css` 文件并打开它。如果没有这个文件，可以创建一个。\r\n3. 在 `style.css` 文件中添加以下代码：\r\n\r\n```css\r\nhtml {\r\n    filter: grayscale(100%);\r\n}\r\n```\r\n\r\n### 2. 确保 CSS 加载\r\n\r\n如果你选择通过子主题的 `style.css` 文件添加 CSS，需要确保这个文件被正确加载。请检查你的 `functions.php` 文件，确保它包含类似以下的代码：\r\n\r\n```php\r\nfunction child_theme_enqueue_styles() {\r\n    // Enqueue parent theme style\r\n    wp_enqueue_style('parent-style', get_template_directory_uri() . '/style.css');\r\n    \r\n    // Enqueue child theme style\r\n    wp_enqueue_style('child-style', get_stylesheet_uri(), array('parent-style'));\r\n}\r\n\r\nadd_action('wp_enqueue_scripts', 'child_theme_enqueue_styles');\r\n```\r\n\r\n### 3. 测试效果\r\n\r\n保存文件并刷新你的网站。整个网站应该会变成黑白效果。如果没有看到效果，请尝试清理浏览器缓存并再次刷新页面。"},{"id":"WordPress给鼠标点击添加颜色效果","metadata":{"permalink":"/blog/WordPress给鼠标点击添加颜色效果","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-16-WordPress给鼠标点击添加颜色效果.md","source":"@site/blog/2024/06-16-WordPress给鼠标点击添加颜色效果.md","title":"WordPress给鼠标点击添加颜色效果","description":"WordPress子主题实现：鼠标在空白处摁下左键，会弹出五彩斑斓的颜色","date":"2024-06-16T22:45:00.000Z","tags":[],"readingTime":2.94,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-16 22:45","slug":"WordPress给鼠标点击添加颜色效果"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"整站变黑白","permalink":"/blog/整站变黑白"},"nextItem":{"title":"wordpress全站禁止鼠标复制文字和鼠标右键","permalink":"/blog/wordpress全站禁止鼠标复制文字和鼠标右键"}},"content":"WordPress子主题实现：鼠标在空白处摁下左键，会弹出五彩斑斓的颜色\r\n\r\n要在WordPress子主题中实现这样的效果，你需要使用JavaScript来捕获鼠标左键按下事件，并在空白处生成五彩斑斓的颜色。以下是实现此功能的基本步骤：\r\n\r\n\r\n\r\n<!-- truncate -->\r\n\r\n### 在子主题中添加JavaScript\r\n\r\n1. **创建JavaScript文件**： 在你的WordPress子主题目录下创建一个新的JavaScript文件，比如 `custom.js`。\r\n\r\n   ```php\r\n   // custom.js\r\n   jQuery(document).ready(function($) {\r\n       $(document).mousedown(function(event) {\r\n           // Check if left mouse button is pressed\r\n           if (event.which === 1) {\r\n               // Generate random RGB color\r\n               var color = getRandomColor();\r\n               // Create a div with the color at mouse position\r\n               createColorSpot(event.pageX, event.pageY, color);\r\n           }\r\n       });\r\n   \r\n       function getRandomColor() {\r\n           var r = Math.floor(Math.random() * 256);\r\n           var g = Math.floor(Math.random() * 256);\r\n           var b = Math.floor(Math.random() * 256);\r\n           return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n       }\r\n   \r\n       function createColorSpot(x, y, color) {\r\n           // Create a colored div at the specified position\r\n           var $spot = $('<div></div>').css({\r\n               'position': 'absolute',\r\n               'left': x + 'px',\r\n               'top': y + 'px',\r\n               'width': '20px',\r\n               'height': '20px',\r\n               'background-color': color,\r\n               'border-radius': '50%'\r\n           });\r\n   \r\n           // Append the div to the body\r\n           $('body').append($spot);\r\n   \r\n           // Fade out and remove the div after a certain time\r\n           $spot.fadeOut(1500, function() {\r\n               $(this).remove();\r\n           });\r\n       }\r\n   });\r\n   \r\n   ```\r\n\r\n2. **将JavaScript文件添加到WordPress主题中**： 打开你的子主题的 `functions.php` 文件，在其中添加以下代码将 `custom.js` 文件包含进来。\r\n\r\n   ```php\r\n   function add_custom_scripts() {\r\n       wp_enqueue_script('custom-script', get_stylesheet_directory_uri() . '/custom.js', array('jquery'), '1.0', true);\r\n   }\r\n   add_action('wp_enqueue_scripts', 'add_custom_scripts');\r\n   \r\n   ```\r\n\r\n### 解释与功能说明\r\n\r\n- **jQuery Document Ready**：确保文档加载完成后再执行JavaScript代码。\r\n- **mousedown事件监听**：捕获鼠标左键按下事件。\r\n- **event.pageX和event.pageY**：获取鼠标点击位置的页面坐标。\r\n- **getRandomColor函数**：生成随机的RGB颜色值。\r\n- **createColorSpot函数**：创建一个带有随机颜色的div，并将其放置在鼠标点击的位置上。\r\n- **fadeOut和remove**：设置颜色块淡出并在淡出完成后从DOM中移除，以避免页面过度加载。\r\n\r\n### 注意事项\r\n\r\n- 这段代码假设你的子主题中已经包含了jQuery库。大多数WordPress主题都会自带jQuery，但如果没有，你需要将其手动添加到你的主题中。\r\n- 这种效果会在用户点击页面空白处时产生颜色斑点，但它们会渐渐消失，而不会永久留在页面上。\r\n\r\n通过这些步骤，你就可以在WordPress子主题中实现在空白处按下鼠标左键时产生五彩斑斓颜色的效果了。"},{"id":"wordpress全站禁止鼠标复制文字和鼠标右键","metadata":{"permalink":"/blog/wordpress全站禁止鼠标复制文字和鼠标右键","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-16-wordpress全站禁止鼠标复制文字和鼠标右键.md","source":"@site/blog/2024/06-16-wordpress全站禁止鼠标复制文字和鼠标右键.md","title":"wordpress全站禁止鼠标复制文字和鼠标右键","description":"在WordPress网站上禁止鼠标左键和右键点击，可以通过添加自定义的JavaScript代码来实现。这些代码可以放在主题的functions.php文件中，或者通过安装插件来添加自定义代码。以下是两种实现方法：","date":"2024-06-16T16:20:00.000Z","tags":[],"readingTime":3.39,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-16 16:20","slug":"wordpress全站禁止鼠标复制文字和鼠标右键"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"WordPress给鼠标点击添加颜色效果","permalink":"/blog/WordPress给鼠标点击添加颜色效果"},"nextItem":{"title":"wordpress修改代码，在文章底部增加打赏按钮","permalink":"/blog/wordpress修改代码，在文章底部增加打赏按钮"}},"content":"在WordPress网站上禁止鼠标左键和右键点击，可以通过添加自定义的JavaScript代码来实现。这些代码可以放在主题的`functions.php`文件中，或者通过安装插件来添加自定义代码。以下是两种实现方法：\r\n\r\n### 方法一：在`functions.php`文件中添加代码\r\n\r\n1. 进入WordPress后台，导航到外观 > 主题文件编辑器。\r\n2. 在右侧选择`functions.php`文件。\r\n3. 在文件的末尾添加以下代码：\r\n\r\n<!-- truncate -->\r\n\r\n```php\r\nfunction disable_mouse_clicks() {\r\n    ?>\r\n    <script type=\"text/javascript\">\r\n        // 禁止鼠标右键点击\r\n        document.addEventListener('contextmenu', function(e) {\r\n            e.preventDefault();\r\n        });\r\n\r\n        // 禁止鼠标左键点击选择文本\r\n        document.addEventListener('mousedown', function(e) {\r\n            if (e.button == 0) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        // 禁止键盘快捷键 (如Ctrl+C)\r\n        document.addEventListener('keydown', function(e) {\r\n            if (e.ctrlKey && (e.key === 'c' || e.key === 'u' || e.key === 's' || e.key === 'a')) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    </script>\r\n    <?php\r\n}\r\nadd_action('wp_footer', 'disable_mouse_clicks');\r\n\r\n```\r\n\r\n我是通过修改子主题的function来实现的。\r\n\r\n---\r\n\r\n上面是复杂化的方法。其实很简单，被JS代码放入网站就好了。可以直接放进`<head>`里，用elementor的自定义代码，放进去也可以。\r\n\r\n## 对未登录用户禁用左右键和下载按钮\r\n\r\n当然可以实现。为了在 WordPress 中对未登录的访客应用这些限制，而对已登录的会员解除限制，你可以使用 WordPress 提供的函数来检测用户的登录状态，并根据状态动态插入 JavaScript 代码。\r\n\r\n以下是一个示例，展示如何在 WordPress 中实现这一点：\r\n\r\n1. 将以下代码添加到您主题的 `functions.php` 文件中：\r\n\r\n```php\r\nfunction restrict_content_for_guests() {\r\n    if (!is_user_logged_in()) {\r\n        ?>\r\n        <script type=\"text/javascript\">\r\n            // 禁止鼠标右键点击\r\n            document.addEventListener('contextmenu', function(e) {\r\n                e.preventDefault();\r\n            });\r\n\r\n            // 禁止鼠标左键点击选择文本\r\n            document.addEventListener('mousedown', function(e) {\r\n                if (e.button == 0) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n\r\n            // 禁止键盘快捷键 (如Ctrl+C)\r\n            document.addEventListener('keydown', function(e) {\r\n                if (e.ctrlKey && (e.key === 'c' || e.key === 'u' || e.key === 's' || e.key === 'a' || e.key === 'p')) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n\r\n            // 禁用全站的下载按钮\r\n            document.addEventListener('click', function(e) {\r\n                var target = e.target;\r\n                if (target.tagName.toLowerCase() === 'a' && target.hasAttribute('download')) {\r\n                    e.preventDefault();\r\n                    alert('下载功能已禁用');\r\n                }\r\n            });\r\n\r\n            // 禁用PDF另存为功能\r\n            document.querySelectorAll('object, embed').forEach(function(element) {\r\n                element.addEventListener('contextmenu', function(e) {\r\n                    e.preventDefault();\r\n                });\r\n            });\r\n        </script>\r\n        <style>\r\n            /* 禁用对象和嵌入类型的内容选择 */\r\n            object, embed {\r\n                pointer-events: none;\r\n            }\r\n        </style>\r\n        <?php\r\n    }\r\n}\r\nadd_action('wp_footer', 'restrict_content_for_guests');\r\n```\r\n\r\n2. 保存 `functions.php` 文件。\r\n\r\n在这个代码片段中：\r\n\r\n- `restrict_content_for_guests` 函数首先检查用户是否已登录。\r\n- 如果用户未登录，则插入包含限制功能的 JavaScript 和 CSS 代码到网页的底部（`wp_footer` 钩子）。\r\n\r\n这样，只有未登录的访客会受到这些限制，而已登录的会员将不会受到影响。确保在修改 `functions.php` 文件之前备份您的主题文件，以防出现意外问题。"},{"id":"wordpress修改代码，在文章底部增加打赏按钮","metadata":{"permalink":"/blog/wordpress修改代码，在文章底部增加打赏按钮","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-15-wordpress修改代码，在文章底部增加打赏按钮.md","source":"@site/blog/2024/06-15-wordpress修改代码，在文章底部增加打赏按钮.md","title":"wordpress修改代码，在文章底部增加打赏按钮","description":"通过修改WordPress主题的single.php文件来实现文章底部添加“打赏”功能，并弹出微信和支付宝二维码的模态框，可以按照以下步骤操作：","date":"2024-06-15T21:09:00.000Z","tags":[],"readingTime":3.465,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-15 21:09","slug":"wordpress修改代码，在文章底部增加打赏按钮"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"wordpress全站禁止鼠标复制文字和鼠标右键","permalink":"/blog/wordpress全站禁止鼠标复制文字和鼠标右键"},"nextItem":{"title":"csdn是个抄袭大本营","permalink":"/blog/csdn是个抄袭大本营"}},"content":"通过修改WordPress主题的`single.php`文件来实现文章底部添加“打赏”功能，并弹出微信和支付宝二维码的模态框，可以按照以下步骤操作：\r\n\r\n### 1. 编辑astra主题的 `content-single.php` 文件\r\n\r\n打开你的WordPress主题目录，找到并编辑 `content-single.php` 文件。你可以在文章内容的末尾添加打赏按钮和模态框的HTML代码。\r\n\r\n### 2. 添加HTML和CSS代码\r\n\r\n在 `content-single.php` 文件中，找到适合的位置（通常是在显示内容的 `the_content()` 函数之后），添加以下HTML和CSS代码：\r\n\r\n### 3. 添加JavaScript代码\r\n\r\n在 `single.php` 文件的底部（在 `</body>` 标签之前），添加以下JavaScript代码，以实现模态框的显示和隐藏功能：\r\n\r\n<!-- truncate -->\r\n\r\n完整代码如下：\r\n\r\n```php\r\n<?php\r\n/**\r\n * Template part for displaying single posts.\r\n *\r\n * @link https://codex.wordpress.org/Template_Hierarchy\r\n *\r\n * @package Astra\r\n * @since 1.0.0\r\n */\r\n\r\n?>\r\n\r\n<?php astra_entry_before(); ?>\r\n\r\n<article\r\n<?php\r\n\t\techo astra_attr(\r\n\t\t\t'article-single',\r\n\t\t\tarray(\r\n\t\t\t\t'id'    => 'post-' . get_the_id(),\r\n\t\t\t\t'class' => join( ' ', get_post_class() ),\r\n\t\t\t)\r\n\t\t);\r\n\t\t?>\r\n>\r\n\r\n\t<?php astra_entry_top(); ?>\r\n\r\n\t<?php astra_entry_content_single(); ?>\r\n\t\r\n\t <!-- 打赏按钮 -->\r\n        <div id=\"reward-button\" style=\"text-align: center; margin-top: 20px;\">\r\n            <button id=\"rewardBtn\" style=\"background-color: #ff5e5e; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;\">\r\n                <i class=\"fa fa-dollar-sign\"></i> 打赏\r\n            </button>\r\n        </div>\r\n\r\n        <!-- 模态框 -->\r\n        <div id=\"rewardModal\" style=\"display: none; position: fixed; z-index: 1; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4);\">\r\n            <div style=\"background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 80%; max-width: 600px; text-align: center; border-radius: 10px;\">\r\n                <span id=\"closeModal\" style=\"color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer;\">&times;</span>\r\n                <h2>打赏</h2>\r\n                <div style=\"display: flex; justify-content: center; margin-top: 20px;\">\r\n                    <div style=\"margin-right: 20px;\">\r\n                        <img src=\"https://shelleydigital.com/wp-content/uploads/2023/08/wechat-pay.jpg\" alt=\"微信打赏\" style=\"width: 150px; height: 150px;\">\r\n                        <p>微信</p>\r\n                    </div>\r\n                    <div>\r\n                        <img src=\"https://shelleydigital.com/wp-content/uploads/2023/08/alipay.jpg\" alt=\"支付宝打赏\" style=\"width: 150px; height: 150px;\">\r\n                        <p>支付宝</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\t<?php astra_entry_bottom(); ?>\r\n\r\n</article><!-- #post-## -->\r\n\r\n<?php astra_entry_after(); ?>\r\n\r\n<script>\r\n// 打开模态框\r\ndocument.getElementById('rewardBtn').onclick = function() {\r\n    document.getElementById('rewardModal').style.display = 'block';\r\n}\r\n\r\n// 关闭模态框\r\ndocument.getElementById('closeModal').onclick = function() {\r\n    document.getElementById('rewardModal').style.display = 'none';\r\n}\r\n\r\n// 点击模态框外部关闭模态框\r\nwindow.onclick = function(event) {\r\n    if (event.target == document.getElementById('rewardModal')) {\r\n        document.getElementById('rewardModal').style.display = 'none';\r\n    }\r\n}\r\n</script>\r\n\r\n```\r\n\r\n### 4. 添加Font Awesome图标（可选）\r\n\r\n如果你希望在按钮上添加一个图标，可以使用Font Awesome。在你的WordPress主题的 `header.php` 文件中，添加以下代码以引入Font Awesome：\r\n\r\n```php\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n```\r\n\r\n### 5. 替换二维码图片\r\n\r\n将 `path/to/wechat-qrcode.png` 和 `path/to/alipay-qrcode.png` 替换为你实际的微信和支付宝二维码图片路径。\r\n\r\n### 6. 完成\r\n\r\n保存 `single.php` 文件并刷新你的网站。在每篇文章的底部应该都会显示一个“打赏”按钮，点击按钮后会弹出包含微信和支付宝二维码的模态框。\r\n\r\n### 注意事项\r\n\r\n1. **备份：** 在修改 `single.php` 文件之前，确保你已经备份了文件，以防出现问题。\r\n2. **图片路径：** 确保你的二维码图片路径正确并且图片已经上传到你的服务器。\r\n3. **主题更新：** 如果你的主题更新，可能会覆盖 `single.php"},{"id":"csdn是个抄袭大本营","metadata":{"permalink":"/blog/csdn是个抄袭大本营","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-09-csdn是个抄袭大本营.md","source":"@site/blog/2024/06-09-csdn是个抄袭大本营.md","title":"csdn是个抄袭大本营","description":"我的原创文章被CSDN作者全文抄袭，","date":"2024-06-09T22:57:00.000Z","tags":[],"readingTime":0.08,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-09 22:57","slug":"csdn是个抄袭大本营"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"wordpress修改代码，在文章底部增加打赏按钮","permalink":"/blog/wordpress修改代码，在文章底部增加打赏按钮"},"nextItem":{"title":"命令行代码推送网址到百度搜索引擎","permalink":"/blog/命令行代码推送网址到百度搜索引擎"}},"content":"我的原创文章被CSDN作者全文抄袭，\r\n\r\n<!-- truncate -->"},{"id":"命令行代码推送网址到百度搜索引擎","metadata":{"permalink":"/blog/命令行代码推送网址到百度搜索引擎","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-20-命令行代码推送网址到百度搜索引擎.md","source":"@site/blog/2024/05-20-命令行代码推送网址到百度搜索引擎.md","title":"命令行代码推送网址到百度搜索引擎","description":"一键推送网址到百度搜索引擎","date":"2024-05-20T10:08:00.000Z","tags":[],"readingTime":0.365,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-20 10:08","slug":"命令行代码推送网址到百度搜索引擎"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"csdn是个抄袭大本营","permalink":"/blog/csdn是个抄袭大本营"},"nextItem":{"title":"高中怼女生的一个回忆","permalink":"/blog/高中怼女生的一个回忆"}},"content":"一键推送网址到百度搜索引擎\r\n\r\n```bat\r\n@echo off\r\n\r\ncurl -H \"Content-Type:text/plain\" --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=https://dfadwiki.com&token=VOIWWefdedMTPIXSnZDh\"\r\n\r\npause\r\n```\r\n\r\n这是我自己写的命令行代码，把URL连接放到urls.txt文档里，然后命令行里运行上面代码，就可以推送URL到百度搜索引擎。\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"高中怼女生的一个回忆","metadata":{"permalink":"/blog/高中怼女生的一个回忆","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-15-高中怼女生的一个回忆.md","source":"@site/blog/2024/05-15-高中怼女生的一个回忆.md","title":"高中怼女生的一个回忆","description":"高一还是高二时，一个女生在黑板上写下“名著“，famous novle, 不知为何，我去演讲时开怼，批判她写的不对。当着全班的面。","date":"2024-05-15T21:05:00.000Z","tags":[],"readingTime":0.37,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-15 21:05","slug":"高中怼女生的一个回忆"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"命令行代码推送网址到百度搜索引擎","permalink":"/blog/命令行代码推送网址到百度搜索引擎"},"nextItem":{"title":"深圳大梅沙发生撞车事故","permalink":"/blog/我在深圳大梅沙发生撞车事故"}},"content":"高一还是高二时，一个女生在黑板上写下“名著“，famous novle, 不知为何，我去演讲时开怼，批判她写的不对。当着全班的面。\r\n\r\n现在想起来，真的太傻比了。为何要当面批判一个女生呢？死直男。\r\n\r\n<!-- truncate -->"},{"id":"我在深圳大梅沙发生撞车事故","metadata":{"permalink":"/blog/我在深圳大梅沙发生撞车事故","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-13-深圳大梅沙发生撞车事故.md","source":"@site/blog/2024/05-13-深圳大梅沙发生撞车事故.md","title":"深圳大梅沙发生撞车事故","description":"2023年8月底，在深圳大梅沙带孩子玩水一天 后，驾车到酒店，在一个红绿灯路口等车的时候，闭上眼睛迷糊了一两秒，竟然睡着了，等过了几秒忽然醒来后，汽车已经横冲直闯冲向了前方，擦碰到左侧2辆车，撞到前方车尾。","date":"2024-05-13T18:59:00.000Z","tags":[],"readingTime":1.825,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-13 18:59","slug":"我在深圳大梅沙发生撞车事故"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"高中怼女生的一个回忆","permalink":"/blog/高中怼女生的一个回忆"},"nextItem":{"title":"使用python来调用tinyPNG API压缩图片","permalink":"/blog/使用python来调用tinyPNG API压缩图片"}},"content":"2023年8月底，在深圳大梅沙带孩子玩水一天 后，驾车到酒店，在一个红绿灯路口等车的时候，闭上眼睛迷糊了一两秒，竟然睡着了，等过了几秒忽然醒来后，汽车已经横冲直闯冲向了前方，擦碰到左侧2辆车，撞到前方车尾。\r\n\r\n<!-- truncate -->\r\n\r\n车上只有我和小孩2个人，小孩在后面。追尾碰撞瞬间，2个安全气囊弹出，一股火药味。车辆停止。小孩吓得哇哇哭。小孩没有伤到。只是惊吓。我的左手臂有血迹，经人提醒，是安全气囊破壳而出时，弹出的塑料碎片切割到我的左手臂。好在是皮外伤，没割到动脉。\r\n\r\n我赶快抱着小孩下车到路边等待。\r\n\r\n幸亏前方有个车挡住。因为前车的前面就是红绿灯路口，一条斑马线，行人正在过马路。如果没有前车被我追尾而挡住我的车，那就直接撞上过马路的行人了！那就是死亡和伤亡了!\r\n\r\n那我估计要赔偿的倾家荡产，甚至要坐牢了。\r\n\r\n万幸！小孩毫发无损，我手臂割伤流血，还算轻微。被我撞到的车里也有小孩，万幸人员都是安全的！！\r\n\r\n万幸！整个2023年，其他什么成功和失败都不重要。这个车祸最严重."},{"id":"使用python来调用tinyPNG API压缩图片","metadata":{"permalink":"/blog/使用python来调用tinyPNG API压缩图片","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-08-使用python来调用tinyPNG API压缩图片.md","source":"@site/blog/2024/05-08-使用python来调用tinyPNG API压缩图片.md","title":"使用python来调用tinyPNG API压缩图片","description":"用python来调用tinyPNG的API来压缩图片、转换图片格式。以下代码是把jpg图片转换为webp格式。转换格式时，会自动压缩图片。","date":"2024-05-08T22:59:00.000Z","tags":[],"readingTime":5.985,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-08 22:59","slug":"使用python来调用tinyPNG API压缩图片"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"深圳大梅沙发生撞车事故","permalink":"/blog/我在深圳大梅沙发生撞车事故"},"nextItem":{"title":"xyz育儿费用","permalink":"/blog/育儿费用"}},"content":"用python来调用tinyPNG的API来压缩图片、转换图片格式。以下代码是把jpg图片转换为webp格式。转换格式时，会自动压缩图片。\r\n\r\n### 最简洁代码\r\n\r\n```python\r\nimport tinify\r\ntinify.key = \"JRk8s8gxWYpsd6PY925SSN175Hffrkhg\"\r\n\r\nsource = tinify.from_file(\"jingdezhen.JPG\")\r\nconverted = source.convert(type=[\"image/webp\",\"image/png\"])\r\nextension = converted.result().extension\r\nconverted.to_file(\"jingdezhen.\" + extension)\t\r\n```\r\n\r\n<!-- truncate -->\r\n\r\n### 带有屏幕提示和任意键关闭代码\r\n\r\n优化版代码，提供了屏幕提示，和任意键关闭屏幕：\r\n\r\n```python\r\nimport tinify\r\nimport os\r\nimport msvcrt\r\n\r\ndef print_file_size(filepath):\r\n    size = os.path.getsize(filepath) / 1024\r\n    print(\"文件大小: %d kb\" % size)\r\n\r\ndef optimize_image(source_path):\r\n    try:\r\n        print_file_size(source_path)\r\n        print(\"开始读取图像到tinyPNG服务器...\")\r\n        source = tinify.from_file(source_path)\r\n        print(\"图像加载成功，正在进行转换...\")\r\n        converted = source.convert(type=\"image/webp\")      # 转换为webp\r\n        extension = converted.result().extension\r\n        output_path = os.path.join(os.path.dirname(source_path), \"test.\" + extension)\r\n        converted.to_file(output_path)\r\n        print(\"图像转换成功，已保存为%s\" % output_path)\r\n        print_file_size(output_path)\r\n        print(\"按下任意键关闭...\")\r\n        msvcrt.getch()  # 等待用户按下任意键\r\n    except tinify.AccountError as e:\r\n        print(\"账户错误：%s\" % e.message)\r\n    except tinify.ClientError as e:\r\n        print(\"客户端错误：%s\" % e.message)\r\n    except tinify.ServerError as e:\r\n        print(\"服务器错误：%s\" % e.message)\r\n    except tinify.ConnectionError as e:\r\n        print(\"连接错误：%s\" % e.message)\r\n    except Exception as e:\r\n        print(\"发生异常：%s\" % str(e))\r\n\r\n# 设置API密钥\r\ntinify.key = \"JRk8s8gxWYpsd6PYd925SSN172Hffrkhg\"\r\n# 设置源图像路径\r\nsource_path = \"test.JPEG\"\r\n# 优化图像\r\noptimize_image(source_path)\r\n```\r\n\r\n\r\n\r\n### 为何type要使用数组？\r\n\r\n在使用 Tinify 转换图像格式时，`type` 参数接受一个数组。这是因为 Tinify 提供了一种方便的方式，允许你指定多个目标格式进行转换。通过将多个格式包含在数组中，你可以一次性将源图像转换为多个目标格式。\r\n\r\n在你的代码示例中，使用 `type=[\"image/webp\"]` 将源图像转换为 WebP 格式。如果你想同时将图像转换为多个格式，只需在 `type` 数组中添加更多元素即可，例如：\r\n\r\n```python\r\nconverted = source.convert(type=[\"image/webp\", \"image/jpeg\", \"image/png\"])\r\n```\r\n\r\n这样，源图像将转换为 WebP、JPEG 和 PNG 格式的三个副本。\r\n\r\n通过使用数组，Tinify 提供了一种简洁而灵活的方式，方便地指定多个目标格式。\r\n\r\n### 如果我只想要webp格式，不使用数组可以吗\r\n\r\n是的，如果你只想将图像转换为 WebP 格式，你可以直接将 `\"image/webp\"` 作为字符串传递给 `type` 参数，而无需使用数组。以下是示例代码：\r\n\r\n```python\r\nconverted = source.convert(type=\"image/webp\")\r\n```\r\n\r\n这样，源图像将仅转换为 WebP 格式，而不会生成其他格式的副本。\r\n\r\n使用数组的主要优势是在单个转换操作中指定多个目标格式。如果只需要一个格式，直接传递字符串即可。\r\n\r\n### 再次完善代码：打开文件框，选择原图\r\n\r\n补充了代码，实现在窗口里选择原图，然后执行代码，输出为转换后的图片。\r\n\r\n```python\r\n\r\nimport tinify\r\nimport os\r\nimport tkinter as tk\r\nfrom tkinter import filedialog\r\nimport msvcrt\r\n\r\ndef print_file_size(filepath):\r\n    size = os.path.getsize(filepath) / 1024\r\n    print(\"文件大小: %d kb\" % size)\r\n\r\ndef optimize_image(source_path):\r\n    try:\r\n        print_file_size(source_path)\r\n        print(\"开始读取图像到tinyPNG服务器...\")\r\n        source = tinify.from_file(source_path)\r\n        print(\"图像加载成功，正在进行转换...\")\r\n        converted = source.convert(type=\"image/webp\")      # 转换为webp\r\n        extension = converted.result().extension\r\n        output_path = os.path.join(os.path.dirname(source_path), \"test.\" + extension)\r\n        converted.to_file(output_path)\r\n        print(\"图像转换成功，已保存为%s\" % output_path)\r\n        print_file_size(output_path)\r\n        print(\"按下任意键关闭...\")\r\n        msvcrt.getch()  # 等待用户按下任意键\r\n    except tinify.AccountError as e:\r\n        print(\"账户错误：%s\" % e.message)\r\n    except tinify.ClientError as e:\r\n        print(\"客户端错误：%s\" % e.message)\r\n    except tinify.ServerError as e:\r\n        print(\"服务器错误：%s\" % e.message)\r\n    except tinify.ConnectionError as e:\r\n        print(\"连接错误：%s\" % e.message)\r\n    except Exception as e:\r\n        print(\"发生异常：%s\" % str(e))\r\n\r\ndef open_file_dialog():\r\n    root = tk.Tk()\r\n    root.withdraw()\r\n    file_path = filedialog.askopenfilename()\r\n    if file_path:\r\n        optimize_image(file_path)\r\n\r\n# 设置API密钥\r\ntinify.key = \"JRk8s8gxWYpsd6PY925SSN172Hffrkhg\"\r\n\r\n# 打开文件对话框选择图像文件并优化\r\nopen_file_dialog()\r\n```\r\n\r\n### 代码优化: 文件框过滤文件，只显示图片文件\r\n\r\n```python\r\nimport tinify\r\nimport os\r\nimport tkinter as tk\r\nfrom tkinter import filedialog\r\nimport msvcrt\r\n\r\ndef print_file_size(filepath):\r\n    size = os.path.getsize(filepath) / 1024\r\n    print(\"文件大小: %d kb\" % size)\r\n\r\ndef optimize_image(source_path):\r\n    try:\r\n        print_file_size(source_path)\r\n        print(\"开始读取图像到tinyPNG服务器...\")\r\n        source = tinify.from_file(source_path)\r\n        print(\"图像加载成功，正在进行转换...\")\r\n        converted = source.convert(type=\"image/webp\")      # 转换为webp\r\n        extension = converted.result().extension\r\n        output_path = os.path.join(os.path.dirname(source_path), \"test.\" + extension)\r\n        converted.to_file(output_path)\r\n        print(\"图像转换成功，已保存为%s\" % output_path)\r\n        print_file_size(output_path)\r\n        print(\"按下任意键关闭...\")\r\n        msvcrt.getch()  # 等待用户按下任意键\r\n    except tinify.AccountError as e:\r\n        print(\"账户错误：%s\" % e.message)\r\n    except tinify.ClientError as e:\r\n        print(\"客户端错误：%s\" % e.message)\r\n    except tinify.ServerError as e:\r\n        print(\"服务器错误：%s\" % e.message)\r\n    except tinify.ConnectionError as e:\r\n        print(\"连接错误：%s\" % e.message)\r\n    except Exception as e:\r\n        print(\"发生异常：%s\" % str(e))\r\n\r\ndef is_image_file(file_path):\r\n    image_extensions = ['.png', '.jpg', '.jpeg', '.gif', '.bmp', '.jfif']\r\n    _, file_extension = os.path.splitext(file_path)\r\n    return file_extension.lower() in image_extensions\r\n\r\ndef open_file_dialog():\r\n    root = tk.Tk()\r\n    root.withdraw()\r\n    file_path = filedialog.askopenfilename(filetypes=[(\"Image Files\", \"*.png;*.jpg;*.jpeg;*.gif;*.bmp;*.jfif\")])\r\n    if file_path and is_image_file(file_path):\r\n        optimize_image(file_path)\r\n\r\n# 设置API密钥\r\ntinify.key = \"JRk8s8gxWYpsd6PY925SSN172Hffrkhg\"\r\n\r\n# 打开文件对话框选择图像文件并优化\r\nopen_file_dialog()\r\n```\r\n\r\n:::info\r\n\r\npython的tkinter库，虽然过滤了只显示图片文件，但是仍然会显示文件夹。这是tikinter局限\r\n\r\n:::"},{"id":"育儿费用","metadata":{"permalink":"/blog/育儿费用","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-08-xyz育儿费用.md","source":"@site/blog/2024/05-08-xyz育儿费用.md","title":"xyz育儿费用","description":"厂方租金每月 3000","date":"2024-05-02T12:55:00.000Z","tags":[],"readingTime":0.45,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-02 12:55","slug":"育儿费用"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"使用python来调用tinyPNG API压缩图片","permalink":"/blog/使用python来调用tinyPNG API压缩图片"},"nextItem":{"title":"第一次做头等舱","permalink":"/blog/第一次做头等舱"}},"content":"厂方租金每月 3000\r\n托管班每月1300 \r\n托管班吃饭每月450\r\n学校早餐每月 450\r\n每月我固定出 5200 元。\r\n\r\n校服1500，班服200，春游\r\n还他妈的喂狗喂了五千\r\n\r\n电话手表600\r\n电话手表每月 30 会员\r\n客厅电视一年 300 会员\r\nipad 2700\r\n两个书包1000\r\n补牙500\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"第一次做头等舱","metadata":{"permalink":"/blog/第一次做头等舱","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-21-第一次做头等舱.md","source":"@site/blog/2024/04-21-第一次做头等舱.md","title":"第一次做头等舱","description":"因为买不到票，第一次做头等舱，8000多的价格。有种VIP的感觉！","date":"2024-04-21T23:00:00.000Z","tags":[],"readingTime":0.43,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-21 23:00","slug":"第一次做头等舱"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"xyz育儿费用","permalink":"/blog/育儿费用"},"nextItem":{"title":"禁止折腾！","permalink":"/blog/禁止折腾！"}},"content":"因为买不到票，第一次做头等舱，8000多的价格。有种VIP的感觉！\r\n\r\n有菜单，可以点菜。有小蛋糕，茶点、酒水。\r\n\r\n缅甸落地签过程还算顺利。出了机场用Grab打滴滴，丝滑体验。\r\n\r\n入住温德姆酒店。门童提行李，我拒绝了。不想给小费。\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"禁止折腾！","metadata":{"permalink":"/blog/禁止折腾！","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-12-禁止折腾！.md","source":"@site/blog/2024/04-12-禁止折腾！.md","title":"禁止折腾！","description":"不要再折腾插件、主题了！！费力不讨好！投入时间和金钱，没产出！","date":"2024-04-12T22:19:00.000Z","tags":[],"readingTime":0.28,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-12 22:19","slug":"禁止折腾！"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"第一次做头等舱","permalink":"/blog/第一次做头等舱"},"nextItem":{"title":"python猜数字游戏源码","permalink":"/blog/python猜数字游戏源码"}},"content":"不要再折腾插件、主题了！！费力不讨好！投入时间和金钱，没产出！\r\n\r\n化繁为简！大道至简。\r\n\r\n去掉spetra插件。用尽量少的插件来运营，以便提高网速。\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"python猜数字游戏源码","metadata":{"permalink":"/blog/python猜数字游戏源码","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-10-python猜数字游戏源码.md","source":"@site/blog/2024/04-10-python猜数字游戏源码.md","title":"python猜数字游戏源码","description":"这是python猜数字游戏的源代码，非常加单。可以学习。","date":"2024-04-10T01:33:00.000Z","tags":[],"readingTime":0.495,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-10 01:33","slug":"python猜数字游戏源码"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"禁止折腾！","permalink":"/blog/禁止折腾！"},"nextItem":{"title":"人情世故","permalink":"/blog/人情世故"}},"content":"这是python猜数字游戏的源代码，非常加单。可以学习。\r\n\r\n``` python\r\nimport random\r\n\r\nprint(\"Welcome to the guessing game!\")\r\n\r\n# Generate a random number between 1 and 100\r\nsecret_number = random.randint(1, 100)\r\n\r\nwhile True:\r\n    # Get a guess from the player\r\n    guess = int(input(\"Enter a number between 1 and 100: \"))\r\n\r\n    # Check if the guess is correct\r\n    if guess == secret_number:\r\n        print(\"You guessed it! The secret number was {}\".format(secret_number))\r\n        break\r\n    elif guess < secret_number:\r\n        print(\"Your guess is too low\")\r\n    else:\r\n        print(\"Your guess is too high\")\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"人情世故","metadata":{"permalink":"/blog/人情世故","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-09-人情世故.md","source":"@site/blog/2024/04-09-人情世故.md","title":"人情世故","description":"不要主动跟别人说自己的“短处”，包括：","date":"2024-04-09T18:22:00.000Z","tags":[],"readingTime":1.265,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-09 18:22","slug":"人情世故"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"python猜数字游戏源码","permalink":"/blog/python猜数字游戏源码"},"nextItem":{"title":"WordPress笔记","permalink":"/blog/WordPress笔记"}},"content":"不要主动跟别人说自己的“短处”，包括：\r\n\r\n* 不要说自己正在工作的上的“短处”\r\n* 不要说自己公司的短处\r\n* 不要说自己正在做的事的“短处\r\n\r\n会被坏人利用！\r\n\r\n---\r\n\r\n跟主管领导要直接打电话！不要总是发微信。电话交谈的信息，2分钟的交谈，会有很多内容、感情。\r\n\r\n发微信做不到这个地步。\r\n\r\n---\r\n\r\n<!-- truncate -->\r\n\r\n### 今天犯的错误：\r\n\r\n跟同事谈论代码，说自己写的代码有点乱凿凿，？！不要自曝其短好不好？这样会被小人利用。\r\n\r\n### 今天的小成就：\r\n\r\n组织小组团建，邀请小组同事团建也有点小小的技巧。如何巧妙的说话，如何巧妙的借势，如何巧妙的邀请到小组同事。\r\n\r\n\r\n\r\n### 反着说话\r\n\r\n不要说你自己的意见是如何如何，而是要说情势所迫，不得不如此。\r\n\r\n### 瘦田无人耕，耕了有人争"},{"id":"WordPress笔记","metadata":{"permalink":"/blog/WordPress笔记","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-04-WordPress笔记.md","source":"@site/blog/2024/04-04-WordPress笔记.md","title":"WordPress笔记","description":"require DIR . '/wp-blog-header.php';这个什么意思","date":"2024-04-04T20:54:00.000Z","tags":[],"readingTime":1.13,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-04 20:54","slug":"WordPress笔记"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"人情世故","permalink":"/blog/人情世故"},"nextItem":{"title":"2024年4月1日","permalink":"/blog/2024年4月1日"}},"content":"### require __DIR__ . '/wp-blog-header.php';这个什么意思\r\n\r\n这行代码的意思是：**使用 `require` 函数载入 `wp-blog-header.php` 文件**。\r\n\r\n**具体解释如下：**\r\n\r\n- `require` 函数：这是一个 PHP 函数，用于载入另一个 PHP 文件。\r\n- `__DIR__`：这是一个 PHP 魔术常量，代表当前文件的目录。\r\n- `/wp-blog-header.php`：这是一个 WordPress 核心文件，负责加载 WordPress 环境和模板。\r\n\r\n**因此，这行代码的作用是：**\r\n\r\n- 将 `wp-blog-header.php` 文件载入到当前脚本中。\r\n- 初始化 WordPress 环境，包括加载数据库配置、主题、插件等。\r\n- 告诉 WordPress 程序要输出主题内容到访客浏览器。\r\n\r\n**总结：**\r\n\r\n这行代码是 WordPress 程序启动过程中的一部分，它负责载入核心文件并启动 WordPress 程序。\r\n\r\n\r\n\r\n<!-- truncate -->\r\n\r\n### 要使博客头部不显示特色图像（feature image），你需要删除以下代码：\r\n\r\ndocy/single.php\r\n\r\n```php\r\nthe_post_thumbnail('full', array( 'class' => 'mb-4 featured-image' ) );\r\n```"},{"id":"2024年4月1日","metadata":{"permalink":"/blog/2024年4月1日","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-01-2024年4月1日.md","source":"@site/blog/2024/04-01-2024年4月1日.md","title":"2024年4月1日","description":"1. 利用这个项目，跟经理搭上线。电话联系。","date":"2024-04-01T18:54:00.000Z","tags":[],"readingTime":1.005,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-01 18:54","slug":"2024年4月1日"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"WordPress笔记","permalink":"/blog/WordPress笔记"},"nextItem":{"title":"3月29号","permalink":"/blog/2024/03/29/3月29号"}},"content":"1. 利用这个项目，跟经理搭上线。电话联系。\r\n\r\n<!-- truncate -->\r\n\r\n2. 好用的扫描王，因为政策原因，不能上传到google drive, onedrive了。阉割的够厉害。\r\n\r\n3. [Node.js: The Documentary | An origin story (youtube.com)](https://www.youtube.com/watch?v=LB8KwiiUGy0)\r\n   Nodejs的发展史，包括创始人访谈。创始人出走，公司分家，又合并。终于到了Node.js的今天。这个网站也是依赖于Node.js来创建的。\r\n\r\n4. 轻易升级了docusaurus 3.2，然后报错，找不到解决方案。尝试退回，一顿胡乱操作。\r\n\r\n   终于成功能使用了。\r\n   以后轻易不要升级了。毕竟这个改变很小很小。\r\n\r\n   \r\n\r\n6. 最好用还是WordPress，只是搭建WordPress每年要500多块的成本。不划算。所以使用github Page的免费空间，使用静态网站生成。"},{"id":"/2024/03/29/3月29号","metadata":{"permalink":"/blog/2024/03/29/3月29号","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-29-3月29号.md","source":"@site/blog/2024/03-29-3月29号.md","title":"3月29号","description":"小学【成绩等级的最新登记要求】","date":"2024-03-29T16:40:00.000Z","tags":[],"readingTime":0.41,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-29 16:40"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"2024年4月1日","permalink":"/blog/2024年4月1日"},"nextItem":{"title":"20240328","permalink":"/blog/2024/03/28/20240328"}},"content":"小学【成绩等级的最新登记要求】\r\nA+（95-100） A（90-94） A-（85-89）\r\nB+（80-84）  B（75-79） \r\nC+（70-74）\r\n\r\n<!-- truncate -->\r\n\r\n\r\n\r\n网站MySQL服务总是自动停止。不省心。不过别放弃。没有简单的事情。\r\n\r\n刷抖音、看电视，简单，但是那不叫“事情”。 如果你发抖音，制作电视，那才叫“事情”。"},{"id":"/2024/03/28/20240328","metadata":{"permalink":"/blog/2024/03/28/20240328","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-28-20240328.md","source":"@site/blog/2024/03-28-20240328.md","title":"20240328","description":"我记得每天睡觉前最后一个关注的粉丝。","date":"2024-03-28T21:37:00.000Z","tags":[],"readingTime":0.715,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-28 21:37"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"3月29号","permalink":"/blog/2024/03/29/3月29号"},"nextItem":{"title":"用python给Markdown文件批量添加头部yaml信息","permalink":"/blog/用python给Markdown文件批量添加头部yaml信息"}},"content":"我记得每天睡觉前最后一个关注的粉丝。\r\n\r\n目前的总的总结是:\r\n\r\n\r\n是我觉得有价值的，没人看，\r\n\r\n我觉得是没意思的，是大批量转发\r\n\r\n<!-- truncate -->\r\n\r\n领导在“可与不可”之间认可了我，给了我机会。想要送点礼。却不知如何去做。:cry:\r\n\r\n---\r\n\r\n决定不要陷入粉丝增长的焦虑当中了。增长，减少，不要太关注！不然会走火入魔。\r\n\r\n主要还是要创作内容。\r\n\r\n12:30凌晨半夜还增加了一个粉丝。谢谢您！"},{"id":"用python给Markdown文件批量添加头部yaml信息","metadata":{"permalink":"/blog/用python给Markdown文件批量添加头部yaml信息","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-27-用python给Markdown文件批量添加头部yaml信息.md","source":"@site/blog/2024/03-27-用python给Markdown文件批量添加头部yaml信息.md","title":"用python给Markdown文件批量添加头部yaml信息","description":"docusaurus下某个文库写了几十篇doc了，但是当时没有添加头部date信息，导致docusaurus每次更新时，页面底部显示的最近更新时间都是npm build的时间，而不是文件创建时的时间。","date":"2024-03-27T16:03:00.000Z","tags":[],"readingTime":2.215,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-27 16:03","slug":"用python给Markdown文件批量添加头部yaml信息"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"20240328","permalink":"/blog/2024/03/28/20240328"},"nextItem":{"title":"建设网站的成本流水账","permalink":"/blog/网站建设成本"}},"content":"docusaurus下某个文库写了几十篇doc了，但是当时没有添加头部date信息，导致docusaurus每次更新时，页面底部显示的最近更新时间都是npm build的时间，而不是文件创建时的时间。\r\n\r\n给头部添加date信息，可以避免这个问题。\r\n\r\n但是已经有几十个doc，我不想一个一个打开来添加。\r\n\r\n<!-- truncate -->\r\n\r\n大神python出场。\r\n\r\n```python\r\nimport os\r\nimport glob\r\nimport fileinput\r\nimport datetime\r\n\r\n# 获取当前日期和时间\r\ncurrent_datetime = datetime.datetime.now()\r\n\r\n# 定义 YAML 内容\r\nyaml_content = \"\"\"---\r\ndate: {date}\r\n---\"\"\".format(date=current_datetime.strftime(\"%Y-%m-%d %H:%M\"))\r\n\r\n# 获取当前目录路径\r\ndirectory = os.getcwd()\r\n\r\n# 遍历当前目录下的所有 .md 文件\r\nfor file_path in glob.glob(os.path.join(directory, '*.md')):\r\n    # 读取文件内容\r\n    with open(file_path, 'r', encoding='utf-8') as file:\r\n        lines = file.readlines()\r\n\r\n    # 在文件头部插入 YAML 内容\r\n    lines.insert(0, yaml_content + '\\n')\r\n\r\n    # 将修改后的内容写回文件\r\n    with open(file_path, 'w', encoding='utf-8') as file:\r\n        file.writelines(lines)\r\n```\r\n\r\n---\r\n\r\n如果要遍历目录下的子文件夹里的Markdown文件，\r\n\r\n要遍历目录下的所有子目录中的 Markdown 文件，可以使用递归方法。以下是修改后的示例代码：\r\n\r\n```python\r\nimport os\r\nimport glob\r\nimport fileinput\r\nimport datetime\r\n\r\n# 获取当前日期和时间\r\ncurrent_datetime = datetime.datetime.now()\r\n\r\n# 定义 YAML 内容\r\nyaml_content = \"\"\"---\r\ndate: {date}\r\n---\"\"\".format(date=current_datetime.strftime(\"%Y-%m-%d %H:%M\"))\r\n\r\n# 定义递归函数\r\ndef process_directory(directory):\r\n    # 遍历目录下的所有文件和子目录\r\n    for entry in os.scandir(directory):\r\n        if entry.is_file() and entry.name.endswith('.md'):\r\n            # 处理 Markdown 文件\r\n            with open(entry.path, 'r', encoding='utf-8') as file:\r\n                lines = file.readlines()\r\n\r\n            # 在文件头部插入 YAML 内容\r\n            lines.insert(0, yaml_content + '\\n')\r\n\r\n            # 将修改后的内容写回文件\r\n            with open(entry.path, 'w', encoding='utf-8') as file:\r\n                file.writelines(lines)\r\n        elif entry.is_dir():\r\n            # 递归处理子目录\r\n            process_directory(entry.path)\r\n\r\n# 获取当前目录路径\r\ndirectory = os.getcwd()\r\n\r\n# 调用递归函数处理目录及其子目录中的 Markdown 文件\r\nprocess_directory(directory)\r\n```"},{"id":"网站建设成本","metadata":{"permalink":"/blog/网站建设成本","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-26-建设网站的成本流水账.md","source":"@site/blog/2024/03-26-建设网站的成本流水账.md","title":"建设网站的成本流水账","description":"1. 购买docy主题50￥;白白浪费，已经不再使用。","date":"2024-03-26T22:53:00.000Z","tags":[],"readingTime":0.215,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-26 22:53","slug":"网站建设成本"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"用python给Markdown文件批量添加头部yaml信息","permalink":"/blog/用python给Markdown文件批量添加头部yaml信息"},"nextItem":{"title":"3月26号","permalink":"/blog/三月26号"}},"content":"1. 购买docy主题50￥;白白浪费，已经不再使用。\r\n2. 购买eazydoc插件60￥\r\n3. 购买elementor pro分销 100￥\r\n4. 腾讯云轻量服务器；\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"三月26号","metadata":{"permalink":"/blog/三月26号","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-26-3月26号.md","source":"@site/blog/2024/03-26-3月26号.md","title":"3月26号","description":"突破100个粉丝！","date":"2024-03-26T20:13:00.000Z","tags":[],"readingTime":1.315,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-26 20:13","slug":"三月26号"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"建设网站的成本流水账","permalink":"/blog/网站建设成本"},"nextItem":{"title":"3月25号","permalink":"/blog/3月25号"}},"content":"突破100个粉丝！\r\n\r\n加油！每天有个期待了。虽然不是什么大事。也是个渺渺众生中一个小人物的一点小小的悲喜。\r\n\r\n![image-20240326232204573](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/image-20240326232204573.png)\r\n\r\n我的文字可以传递个100个人。虽然这100个人并不一定都看。\r\n\r\n<!-- truncate -->\r\n\r\nPython伟大，CMD命令行也挺好用。有些工作，电脑自带的cmd命令行也挺好用。只是没有python那么系统化。所以python不是凭空来的，它的出现，也是在cmd基础上的。\r\n\r\n用VBA同样能实现同样的功能。只是总体而言，实现同一个功能的情况下，Python最简单，最快捷，最方便。\r\n\r\n估计今天不会再涨粉了。谢谢各位看官大佬门。虽然我不会在公众号直接给你们发信息。没必要打扰粉丝们。大家只默默的守护者就好。我写的你喜欢看，那就足够了！在这里写的，估计粉丝们也看不到。即使看到，也是几年以后的事情。"},{"id":"3月25号","metadata":{"permalink":"/blog/3月25号","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-25-3月25号.md","source":"@site/blog/2024/03-25-3月25号.md","title":"3月25号","description":"剪头发。树立形象。头发太长了。早该剪了。","date":"2024-03-25T22:58:00.000Z","tags":[],"readingTime":1.98,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-25 22:58","slug":"3月25号"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"3月26号","permalink":"/blog/三月26号"},"nextItem":{"title":"bat命令行脚本自动执行git commit和git push","permalink":"/blog/bat命令行脚本自动执行git commit和git push"}},"content":"剪头发。树立形象。头发太长了。早该剪了。\r\n\r\n吃到一顿桂林米粉。\r\n\r\n晚上想不吃，减肥。坚持到现在。结果剪头发回来没忍住，买了一瓶酒，和一包花生。\r\n\r\n现在还想再去吃米粉。。。坚持住！！！！！！！！！！！！！！！！！！！\r\n\r\n===管住嘴！！！！！！！！！！！！！！！！！！！！！！！===\r\n\r\n<!-- truncate -->\r\n\r\n---\r\n\r\n百度真的是技术有限，跟google差远了。一个网站google已经收录了几百条页面，百度才收录一条。百度在珍惜它的爬虫资源。我的天，你做搜索引擎的，居然怕浪费你的爬虫。我屮艸芔茻。\r\n\r\n---\r\n\r\n![image-20240325230608624](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/image-20240325230608624.png)\r\n\r\n公众号文章，这几天粉丝数涨了不少。虽然还是很少。。。加油！！！继续产出高质量文章！！！\r\n\r\n**别太在意“高质量”这三个字，有时候你抄袭的也能被评为“高质量”。！！！！！**\r\n\r\n很多东西，别太当真:cry:\r\n\r\n认真你就输了！！世界就是如此残酷！！！:signal_strength:\r\n\r\n---\r\n\r\n不要读论语！！论语害死人！！国学害死人！！论语、国学，就是让你做个傻逼老实人！:warning:如果要读，必须批判地读。！\r\n\r\n---\r\n\r\n什么？你觉得静态网站生成器，每次都要 npm build然后上传，这个过程比较low？人家GitHub都没解决而是积极拥抱的事情，你要瞎操心？！！！\r\n\r\n静态网站就是快！！！有利有弊！！没有十全十美！！！敢号称“十全”的只有乾隆。你没有乾隆的0.0000000000000000000000000000000000001%，就不要妄想十全了！\r\n\r\n有个静态博客，有个免费的GitHub，让你免费做空间，就很好了。！！！别在奢求了！！！"},{"id":"bat命令行脚本自动执行git commit和git push","metadata":{"permalink":"/blog/bat命令行脚本自动执行git commit和git push","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-24-bat命令行脚本自动执行git commit和git push.md","source":"@site/blog/2024/03-24-bat命令行脚本自动执行git commit和git push.md","title":"bat命令行脚本自动执行git commit和git push","description":"用bat命令行脚本，自动执行git commit, git push。点击这个脚本，就可以自动运行了。chcp 65001 > nul是为了让终端显示中文，否则会乱码。","date":"2024-03-24T22:14:00.000Z","tags":[],"readingTime":1.05,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-24 22:14","slug":"bat命令行脚本自动执行git commit和git push"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"3月25号","permalink":"/blog/3月25号"},"nextItem":{"title":"用python自动化生成Markdown文件的yml头部信息","permalink":"/blog/用python自动化生成Markdown文件的yml头部信息"}},"content":"用bat命令行脚本，自动执行git commit, git push。点击这个脚本，就可以自动运行了。`chcp 65001 > nul`是为了让终端显示中文，否则会乱码。\r\n\r\n好用的要哭！从此告别以下步骤：\r\n\r\n1. git add .\r\n2. git commit -m 'test xcfdf'\r\n3. git push\r\n\r\n<!-- truncate -->\r\n\r\n![image-20240324222044694](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/image-20240324222044694.png)\r\n\r\n``` bat title='/auto git push.bat'\r\n@echo off\r\nchcp 65001 > nul\r\necho 正在执行 Git 命令...\r\n\r\necho 添加更改到git...\r\ngit add .\r\ntimeout /t 2\r\n\r\necho 正在提交更改...\r\ngit commit -m \"自动提交\"\r\ntimeout /t 2\r\n\r\necho 正在推送更改到远程仓库...\r\ngit push\r\ntimeout /t 2\r\n\r\necho Git 命令执行成功。\r\npause\r\n```\r\n\r\n\r\n\r\n批处理命令自动git push到GitHub，GitHub action自动执行deploy生成网页，哎呀，妈耶，过程太丝滑，全自动！\r\n\r\n写好博客后，点击以下这个批处理脚本，就万事大吉了！！！"},{"id":"用python自动化生成Markdown文件的yml头部信息","metadata":{"permalink":"/blog/用python自动化生成Markdown文件的yml头部信息","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-24-用python自动化生成Markdown文件的yml头部信息.md","source":"@site/blog/2024/03-24-用python自动化生成Markdown文件的yml头部信息.md","title":"用python自动化生成Markdown文件的yml头部信息","description":"用python自动化生成Markdown文件，并自动填入yml头部信息。你可以在代码中修改，加入自己想要自动化填入的信息，比如可以自动化填入作者、标题等等，全部都可以！","date":"2024-03-24T21:22:00.000Z","tags":[],"readingTime":1.225,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-24 21:22","slug":"用python自动化生成Markdown文件的yml头部信息"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"bat命令行脚本自动执行git commit和git push","permalink":"/blog/bat命令行脚本自动执行git commit和git push"},"nextItem":{"title":"用python把多个pdf合并为一个PDF并自动添加书签","permalink":"/blog/用python把多个pdf合并为一个PDF并自动添加书签"}},"content":"用python自动化生成Markdown文件，并自动填入yml头部信息。你可以在代码中修改，加入自己想要自动化填入的信息，比如可以自动化填入作者、标题等等，全部都可以！\r\n\r\n我又让它自动填入`<!-- truncate -->\\`命令，这样在docusaurus博客列表中，就会显示摘要了，不用每次自己手动输入这个难写的命令了。\r\n\r\n伟大的python！\r\n\r\n<!-- truncate -->\r\n\r\n```python title=\"/auto creat markdown file and auto fill in yml.py\"\r\n\r\n# 获取当前日期和时间\r\ncurrent_datetime = datetime.datetime.now()\r\n\r\n# 构建 Markdown 文件名（去掉扩展名）\r\nmd_filename = f\"{current_datetime.year}年{current_datetime.month}月{current_datetime.day}日\"\r\n\r\n# 构建 YAML 内容\r\nyaml_content = \"\"\"---\r\ntitle: {title}\r\nauthor: Your Name\r\ndate: {date}\r\n---\"\"\".format(title=md_filename, date=current_datetime)\r\n\r\n# 写入 Markdown 文件内容\r\nmd_content = \"\\n\\n\\n<!-- truncate -->\\n\"\r\n\r\nwith open(f\"{md_filename}.md\", \"w\", encoding=\"utf-8\") as file:\r\n    file.write(yaml_content)\r\n    file.write(md_content)\r\n\r\nprint(f\"Markdown 文件 {md_filename}.md 创建成功，YAML 头信息和内容已写入文件。\")\t\r\n```\r\n\r\n:::tip\r\n\r\n注意，如果自动填入的内容是中文，encoding=\"utf-8\"必须要写；否则填入的是乱码\r\n\r\n:::"},{"id":"用python把多个pdf合并为一个PDF并自动添加书签","metadata":{"permalink":"/blog/用python把多个pdf合并为一个PDF并自动添加书签","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-20-用python把多个pdf合并为一个PDF并自动添加书签.md","source":"@site/blog/2024/03-20-用python把多个pdf合并为一个PDF并自动添加书签.md","title":"用python把多个pdf合并为一个PDF并自动添加书签","description":"这是以前的一个python小程序。假如文件夹下有5个PDF文件，他们的名字分别是：","date":"2024-03-20T00:00:00.000Z","tags":[],"readingTime":2.18,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-20T00:00:00.000Z","slug":"用python把多个pdf合并为一个PDF并自动添加书签"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"用python自动化生成Markdown文件的yml头部信息","permalink":"/blog/用python自动化生成Markdown文件的yml头部信息"},"nextItem":{"title":"docusaurus和腾讯云服务器的朴素沟通","permalink":"/blog/docusaurus和腾讯云服务器的朴素沟通"}},"content":"这是以前的一个python小程序。假如文件夹下有5个PDF文件，他们的名字分别是：\r\n\r\n1.  hello\r\n2.  world\r\n3.  nihao\r\n4.  shijie\r\n5.  thankyou\r\n\r\n----\r\n\r\n把他们合并到成一个jieshao.pdf文件，并且用上面5个文件的名字来作为jieshao.pdf的书签。\r\n\r\n*<!-- truncate -->*\r\n\r\n:::info\r\n\r\n这个函数会遍历要求目录下的所有文件，将以  .pdf 结尾的所有pdf合并成一个新的pdf，并保存在 file_dir 目录下\r\n\r\n:::\r\n\r\n```python\r\nimport os\r\nimport os.path\r\nfrom PyPDF2 import PdfFileReader, PdfFileWriter\r\nimport time\r\n\r\n##########################找到 filepath 下的所有pdf，将地址返回########################\r\ndef getFileName(filepath):\r\n    list1=[]\r\n    for root, dirs, files in os.walk(filepath, topdown=False):\r\n        for name in files:\r\n            if name.endswith(\".pdf\"):\r\n                list1.append(os.path.join(root, name))\r\n    return list1\r\n\r\n##########################合并同一个文件夹下所有PDF文件########################\r\ndef MergePDF(filepath, outfile):\r\n    output = PdfFileWriter()\r\n    outputPages = 0\r\n    pdf_fileName = getFileName(filepath)\r\n    for each_file in pdf_fileName:\r\n        print(\"adding %s\" % each_file)\r\n        # 读取源pdf文件\r\n        input = PdfFileReader(open(each_file, \"rb\"))\r\n\r\n        # 如果pdf文件已经加密，必须首先解密才能使用pyPdf\r\n        if input.isEncrypted == True:\r\n            input.decrypt(\"map\")\r\n\r\n        # 获得源pdf文件中页面总数\r\n        pageCount = input.getNumPages()\r\n        outputPages += pageCount\r\n        print(\"%s has %d pages\" % (each_file, pageCount))\r\n\r\n        # 分别将page添加到输出output中\r\n        for iPage in range(pageCount):\r\n            output.addPage(input.getPage(iPage))\r\n\r\n        # 添加书签,以pdf名字命名书签,并且有书签名中带页码范围\r\n        x=outputPages-pageCount  #当前PDF到了第几页\r\n        output.addBookmark(\r\n            title=each_file.split(\"\\\\\")[-1]+str(x+1)+'-'+str(x+pageCount),pagenum=x)\r\n\r\n    print(\"All Pages Number: \" + str(outputPages))\r\n    # 最后写pdf文件\r\n    outputStream = open(os.path.join(filepath, outfile), \"wb\")\r\n    output.write(outputStream)\r\n    outputStream.close()\r\n    print(\"finished\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    time1 = time.time()\r\n    # 这里保存pdf文件的目录    \r\n    file_dir =r'C:\\Users\\frankelin\\Documents\\湖南醴陵旅游' \r\n    # 这里保存生成文件的名字\r\n    out = u\"jieshao.pdf\" \r\n    #这个函数会遍历要求目录下的所有文件，将以  .pdf 结尾的所有pdf合并成一个新的pdf，并保存在 file_dir 目录下\r\n    MergePDF(file_dir, out)\r\n    time2 = time.time()\r\n    print(u'总共耗时： %.4f s' % (time2 - time1))\r\n\r\n```"},{"id":"docusaurus和腾讯云服务器的朴素沟通","metadata":{"permalink":"/blog/docusaurus和腾讯云服务器的朴素沟通","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-19-docusaurus和腾讯云服务器的朴素沟通.md","source":"@site/blog/2024/03-19-docusaurus和腾讯云服务器的朴素沟通.md","title":"docusaurus和腾讯云服务器的朴素沟通","description":"本地电脑，访问远程主机的localhost:3000","date":"2024-03-19T00:00:00.000Z","tags":[],"readingTime":6.74,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-19T00:00:00.000Z","slug":"docusaurus和腾讯云服务器的朴素沟通"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"用python把多个pdf合并为一个PDF并自动添加书签","permalink":"/blog/用python把多个pdf合并为一个PDF并自动添加书签"},"nextItem":{"title":"20240322","permalink":"/blog/20240322"}},"content":"### 本地电脑，访问远程主机的localhost:3000\r\n\r\nssh -L 3000:localhost:3000 root@121.220.83.133\r\n\r\n这个命令会将本地电脑的 `3000` 端口转发到远程主机上的 `localhost:3000` 端口。\r\n\r\nSSH 端口转发是一次性的，只要你关闭了终端窗口，端口转发就会自动停止。\r\n\r\n端口转发只会影响你当前的 SSH 连接以及转发的端口，不会影响你的其他网络连接和端口使用\r\n*<!-- truncate -->*\r\n\r\n\r\n---\r\n\r\n\r\n### 从远程服务器下载（备份）文件到本地\r\n\r\n```bash\r\nscp -r root@121.220.83.133:/www/wwwroot/konglong/* C:\\Users\\frankelin\\Desktop\\shiyishi\\\r\n```\r\n\r\n在这个命令中，`-r` 选项表示要递归复制整个目录树，`root@121.220.83.133:/www/wwwroot/ceshi/*` 指定了要复制的远程目录和文件名通配符，`C:\\Users\\frankelin\\Desktop\\shiyishi\\` 指定了要将文件复制到本地的目录。请注意，路径末尾的斜杠很重要，它表示将文件复制到目录中，而不是将整个远程目录复制到本地目录中。\r\n\r\n在运行命令时，您需要输入远程主机的密码。另外，请确保本地主机和远程主机之间的网络连接正常，并且您具有足够的权限访问远程主机上的文件和目录。\r\n\r\n---\r\n\r\n### Linux主机，设置一键deploy部署静态网站\r\n\r\n制作一个Linux的批处理，首先运行npm run build;然后执行把build里构建好的文件，复制到网站根目录下。\r\n\r\n您可以创建一个Shell脚本，将这两条命令放在一起执行。具体步骤如下：\r\n\r\n**打开终端，使用文本编辑器创建一个新文件，比如说`deploy.sh`：**\r\n\r\n```bash\r\nnano deploy.sh\r\n```\r\n\r\n**在文件中输入以下内容：**\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\n# 进入项目目录\r\necho \"正在进入项目目录：/www/wwwroot/konglong\"\r\ncd /www/wwwroot/konglong\r\n\r\n# 执行npm run build\r\necho \"正在执行npm run build命令\"\r\nnpm run build\r\n\r\n# 复制文件\r\necho \"正在复制文件到目标目录：/www/wwwroot/mart\"\r\ncp -r /www/wwwroot/konglong/build/* /www/wwwroot/mart/\r\n\r\n# 完成\r\necho \"部署已完成\"\r\n```\r\n\r\n这个脚本首先进入项目目录`/www/wwwroot/konglong`，然后执行`npm run build`命令生成打包文件，最后使用`cp`命令将打包文件复制到目标目录`/www/wwwroot/mart`。\r\n\r\n**保存并退出文件。然后使用以下命令为脚本添加可执行权限：**\r\n\r\n```bash\r\nchmod +x deploy.sh\r\n```\r\n\r\n**现在您可以运行这个脚本了。在终端中输入以下命令：**\r\n\r\n```bash\r\n./deploy.sh\r\n```\r\n\r\n这个命令会执行`deploy.sh`脚本，依次执行`npm run build`和`cp`命令。\r\n\r\n请注意，这个脚本中的路径应该根据您的实际情况进行修改。另外，如果您不希望每次运行脚本时都需要输入密码，可以将脚本放在root用户的家目录下，并使用root用户运行脚本。\r\n\r\n**如果您将这个脚本保存在一个可执行的文件中，并将该文件添加到系统的PATH环境变量中，那么您可以在任意目录下运行该命令。**\r\n\r\n以下是将脚本添加到PATH环境变量的步骤：\r\n\r\n1. 将脚本保存为一个可执行文件，比如`deploy.sh`。\r\n2. 将文件复制到/usr/local/bin目录下：\r\n\r\n```bash\r\nsudo cp deploy.sh /usr/local/bin/deploy\r\n```\r\n\r\n这个命令将文件复制到/usr/local/bin目录下，并将文件名改为`deploy`。这个目录通常是系统的PATH环境变量包含的目录之一。\r\n\r\n3. 添加执行权限：\r\n\r\n```bash\r\nsudo chmod +x /usr/local/bin/deploy\r\n```\r\n\r\n这个命令将给`/usr/local/bin/deploy`文件添加可执行权限。\r\n\r\n4. 现在您可以在任意目录下运行该命令了：\r\n\r\n```bash\r\ndeploy\r\n```\r\n\r\n这个命令会执行`/usr/local/bin/deploy`文件，依次执行`npm run build`和`cp`命令。\r\n\r\n请注意，如果您在执行命令时仍然遇到权限问题，可以尝试使用sudo命令以root权限运行该命令。\r\n\r\n---\r\n\r\n```\r\ncat ~/.ssh/id_rsa.pub | ssh root@121.220.83.133 \"mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys\"\r\n```\r\n\r\n---\r\n\r\n### SSH秘钥，这样就不用每次连接服务器都输入密码了\r\n\r\n在默认情况下，每次使用 `scp` 命令都需要输入远程主机的密码。为了避免每次手动输入密码，您可以使用 SSH 公钥认证的方式。\r\n\r\nSSH 公钥认证的基本原理是，在本地主机上生成一对公钥和私钥，将公钥复制到远程主机上，然后将私钥用于本地主机与远程主机之间的认证，这样就可以实现自动登录，不再需要手动输入密码。\r\n\r\n以下是使用 SSH 公钥认证的步骤：\r\n\r\n1. 在本地主机上生成 SSH 密钥对。\r\n\r\n```\r\nssh-keygen -t rsa\r\n```\r\n\r\n按照提示输入文件名和密码。如果您不想设置密码，可以直接按回车键。\r\n\r\n2. 将公钥复制到远程主机上。\r\n\r\n```\r\nssh-copy-id username@remote_host\r\n```\r\n\r\n[如果windows终端执行不了这个代码，则需要安装git,用Git的bash终端来执行这个命令]\r\n\r\n其中 `username` 是远程主机上的用户名，`remote_host` 是远程主机的 IP 地址或主机名。运行命令后，您需要输入远程主机的密码。\r\n\r\n3. 测试 SSH 公钥认证是否生效。\r\n\r\n```\r\nssh root@121.220.83.133\r\n```\r\n\r\n如果 SSH 公钥认证设置成功，您将可以直接登录到远程主机，不再需要输入密码。此时，您可以使用 `scp` 命令将文件上传到远程主机，不再需要手动输入密码。\r\n\r\n---\r\n\r\n```bash\r\nrsync -avzhe ssh --delete C:\\Users\\frankelin\\wiki root@121.220.83.133:/www/wwwroot/konglong\r\n```"},{"id":"20240322","metadata":{"permalink":"/blog/20240322","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-22-20240322.md","source":"@site/blog/2024/03-22-20240322.md","title":"20240322","description":"如何创建对SEO友好的URL(分步指南) (ahrefs.com)","date":"2024-03-18T00:00:00.000Z","tags":[],"readingTime":1.355,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2024-03-18T00:00:00.000Z","slug":"20240322"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"docusaurus和腾讯云服务器的朴素沟通","permalink":"/blog/docusaurus和腾讯云服务器的朴素沟通"},"nextItem":{"title":"Haha","permalink":"/blog/流水账"}},"content":"[如何创建对SEO友好的URL(分步指南) (ahrefs.com)](https://ahrefs.com/blog/zh/seo-friendly-urls/#anatomy-of-a-url)\r\n\r\n## 使用子目录提供层次结构\r\n\r\n子目录有助于提供层次感，并提供有用的额外信息。\r\n\r\n例如，使用以下URL：\r\n\r\n```\r\ndomain.com/airpods.html\r\n```\r\n\r\n从URL尚不清楚页面是否在出售AirPods，提供AirPods评论或其它产品。\r\n\r\n现在来看这个：\r\n\r\n```\r\ndomain.com/store/earbuds/apple/airpods.html\r\n```\r\n\r\n:::info\r\n\r\n谁说的网址URL不能四层链接？！这个权威的例子，就是4层链接！\r\n\r\n:::\r\n\r\n显然，这是销售AirPods的产品页面的URL。\r\n\r\n这个子目录结构还可以清楚地表明：\r\n\r\n- 耳塞只是在线商店提供的产品类型之一。\r\n- 苹果公司生产这款产品，并且该品牌还可能有其它耳塞出售。\r\n- 商店中可能还会有其它品牌的耳塞待售。\r\n\r\n使用子目录可以更轻松地将关键字合并到URL中，而不会让URL像垃圾链接。\r\n\r\n**垃圾链接****:** `domain.com/buy-apple-airpods-earbuds.html`\r\n**友好的链接:** `domain.com/store/earbuds/apple/airpods.html`\r\n\r\n---\r\n\r\n## 现在禁止2个：\r\n\r\n1. 禁止更换WordPress主题！\r\n2. 禁止更换eazydoc插件！"},{"id":"流水账","metadata":{"permalink":"/blog/流水账","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-06-Haha.md","source":"@site/blog/2024/04-06-Haha.md","title":"Haha","description":"汇率","date":"2023-03-23T00:00:00.000Z","tags":[],"readingTime":1.195,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2023-03-23T00:00:00.000Z","slug":"流水账"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"20240322","permalink":"/blog/20240322"}},"content":"## 汇率\r\n\r\n年初手里有1500美元，当时汇率是7\r\n今天规律是7.21。\r\n美元放抽屉里不动，增值了300人民币？\r\n\r\n\r\n啊，这个牛肉酱竟然可以直接当下酒菜可以直接吃。也能配酒，\r\n\r\n## 公众号粉丝\r\n\r\n公众号粉丝最多一次流量：1000多次阅读，分享47次，原因是写的一片很细小的东西。\r\n\r\n![Screenshot_2024-03-22-17-11-22-784_com.tencent.mm](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/Screenshot_2024-03-22-17-11-22-784_com.tencent.mm.png)\r\n\r\n## 公园郊游。走出去，别老在家里。\r\n\r\n\r\n\r\n## 配置Algolia\r\n\r\n全部步骤对了。搜索框搜啥都没出来。等等吧。看明天是否会好起来。\r\n\r\n---\r\n\r\n找了清洁工阿姨来帮我清理房间垃圾，花费150元。感觉很值得。我自己来回路费比这还多。自己还要累的要命。早该行动了。\r\n\r\n自己没办法什么事情都做。社会是分工的。善于花点钱来调用各种资源，来给自己的核心项目、核心实业来完善。"}]}}