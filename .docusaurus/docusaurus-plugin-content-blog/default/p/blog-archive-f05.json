{"archive":{"blogPosts":[{"id":"csdn是个抄袭大本营","metadata":{"permalink":"/blog/csdn是个抄袭大本营","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/06-09-csdn是个抄袭大本营.md","source":"@site/blog/2024/06-09-csdn是个抄袭大本营.md","title":"csdn是个抄袭大本营","description":"我的原创文章被CSDN作者全文抄袭，","date":"2024-06-09T22:57:00.000Z","tags":[],"readingTime":0.08,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-06-09 22:57","slug":"csdn是个抄袭大本营"},"unlisted":false,"lastUpdatedAt":1539502055000,"nextItem":{"title":"命令行代码推送网址到百度搜索引擎","permalink":"/blog/命令行代码推送网址到百度搜索引擎"}},"content":"我的原创文章被CSDN作者全文抄袭，\r\n\r\n<!-- truncate -->"},{"id":"命令行代码推送网址到百度搜索引擎","metadata":{"permalink":"/blog/命令行代码推送网址到百度搜索引擎","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-20-命令行代码推送网址到百度搜索引擎.md","source":"@site/blog/2024/05-20-命令行代码推送网址到百度搜索引擎.md","title":"命令行代码推送网址到百度搜索引擎","description":"一键推送网址到百度搜索引擎","date":"2024-05-20T10:08:00.000Z","tags":[],"readingTime":0.365,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-20 10:08","slug":"命令行代码推送网址到百度搜索引擎"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"csdn是个抄袭大本营","permalink":"/blog/csdn是个抄袭大本营"},"nextItem":{"title":"高中怼女生的一个回忆","permalink":"/blog/高中怼女生的一个回忆"}},"content":"一键推送网址到百度搜索引擎\r\n\r\n```bat\r\n@echo off\r\n\r\ncurl -H \"Content-Type:text/plain\" --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=https://dfadwiki.com&token=VOIWWefdedMTPIXSnZDh\"\r\n\r\npause\r\n```\r\n\r\n这是我自己写的命令行代码，把URL连接放到urls.txt文档里，然后命令行里运行上面代码，就可以推送URL到百度搜索引擎。\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"高中怼女生的一个回忆","metadata":{"permalink":"/blog/高中怼女生的一个回忆","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-15-高中怼女生的一个回忆.md","source":"@site/blog/2024/05-15-高中怼女生的一个回忆.md","title":"高中怼女生的一个回忆","description":"高一还是高二时，一个女生在黑板上写下“名著“，famous novle, 不知为何，我去演讲时开怼，批判她写的不对。当着全班的面。","date":"2024-05-15T21:05:00.000Z","tags":[],"readingTime":0.37,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-15 21:05","slug":"高中怼女生的一个回忆"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"命令行代码推送网址到百度搜索引擎","permalink":"/blog/命令行代码推送网址到百度搜索引擎"},"nextItem":{"title":"深圳大梅沙发生撞车事故","permalink":"/blog/我在深圳大梅沙发生撞车事故"}},"content":"高一还是高二时，一个女生在黑板上写下“名著“，famous novle, 不知为何，我去演讲时开怼，批判她写的不对。当着全班的面。\r\n\r\n现在想起来，真的太傻比了。为何要当面批判一个女生呢？死直男。\r\n\r\n<!-- truncate -->"},{"id":"我在深圳大梅沙发生撞车事故","metadata":{"permalink":"/blog/我在深圳大梅沙发生撞车事故","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-13-深圳大梅沙发生撞车事故.md","source":"@site/blog/2024/05-13-深圳大梅沙发生撞车事故.md","title":"深圳大梅沙发生撞车事故","description":"2023年8月底，在深圳大梅沙带孩子玩水一天 后，驾车到酒店，在一个红绿灯路口等车的时候，闭上眼睛迷糊了一两秒，竟然睡着了，等过了几秒忽然醒来后，汽车已经横冲直闯冲向了前方，擦碰到左侧2辆车，撞到前方车尾。","date":"2024-05-13T18:59:00.000Z","tags":[],"readingTime":1.825,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-13 18:59","slug":"我在深圳大梅沙发生撞车事故"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"高中怼女生的一个回忆","permalink":"/blog/高中怼女生的一个回忆"},"nextItem":{"title":"使用python来调用tinyPNG API压缩图片","permalink":"/blog/使用python来调用tinyPNG API压缩图片"}},"content":"2023年8月底，在深圳大梅沙带孩子玩水一天 后，驾车到酒店，在一个红绿灯路口等车的时候，闭上眼睛迷糊了一两秒，竟然睡着了，等过了几秒忽然醒来后，汽车已经横冲直闯冲向了前方，擦碰到左侧2辆车，撞到前方车尾。\r\n\r\n<!-- truncate -->\r\n\r\n车上只有我和小孩2个人，小孩在后面。追尾碰撞瞬间，2个安全气囊弹出，一股火药味。车辆停止。小孩吓得哇哇哭。小孩没有伤到。只是惊吓。我的左手臂有血迹，经人提醒，是安全气囊破壳而出时，弹出的塑料碎片切割到我的左手臂。好在是皮外伤，没割到动脉。\r\n\r\n我赶快抱着小孩下车到路边等待。\r\n\r\n幸亏前方有个车挡住。因为前车的前面就是红绿灯路口，一条斑马线，行人正在过马路。如果没有前车被我追尾而挡住我的车，那就直接撞上过马路的行人了！那就是死亡和伤亡了!\r\n\r\n那我估计要赔偿的倾家荡产，甚至要坐牢了。\r\n\r\n万幸！小孩毫发无损，我手臂割伤流血，还算轻微。被我撞到的车里也有小孩，万幸人员都是安全的！！\r\n\r\n万幸！整个2023年，其他什么成功和失败都不重要。这个车祸最严重."},{"id":"使用python来调用tinyPNG API压缩图片","metadata":{"permalink":"/blog/使用python来调用tinyPNG API压缩图片","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-08-使用python来调用tinyPNG API压缩图片.md","source":"@site/blog/2024/05-08-使用python来调用tinyPNG API压缩图片.md","title":"使用python来调用tinyPNG API压缩图片","description":"用python来调用tinyPNG的API来压缩图片、转换图片格式。以下代码是把jpg图片转换为webp格式。转换格式时，会自动压缩图片。","date":"2024-05-08T22:59:00.000Z","tags":[],"readingTime":5.985,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-08 22:59","slug":"使用python来调用tinyPNG API压缩图片"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"深圳大梅沙发生撞车事故","permalink":"/blog/我在深圳大梅沙发生撞车事故"},"nextItem":{"title":"xyz育儿费用","permalink":"/blog/育儿费用"}},"content":"用python来调用tinyPNG的API来压缩图片、转换图片格式。以下代码是把jpg图片转换为webp格式。转换格式时，会自动压缩图片。\r\n\r\n### 最简洁代码\r\n\r\n```python\r\nimport tinify\r\ntinify.key = \"JRk8s8gxWYpsd6PY925SSN175Hffrkhg\"\r\n\r\nsource = tinify.from_file(\"jingdezhen.JPG\")\r\nconverted = source.convert(type=[\"image/webp\",\"image/png\"])\r\nextension = converted.result().extension\r\nconverted.to_file(\"jingdezhen.\" + extension)\t\r\n```\r\n\r\n<!-- truncate -->\r\n\r\n### 带有屏幕提示和任意键关闭代码\r\n\r\n优化版代码，提供了屏幕提示，和任意键关闭屏幕：\r\n\r\n```python\r\nimport tinify\r\nimport os\r\nimport msvcrt\r\n\r\ndef print_file_size(filepath):\r\n    size = os.path.getsize(filepath) / 1024\r\n    print(\"文件大小: %d kb\" % size)\r\n\r\ndef optimize_image(source_path):\r\n    try:\r\n        print_file_size(source_path)\r\n        print(\"开始读取图像到tinyPNG服务器...\")\r\n        source = tinify.from_file(source_path)\r\n        print(\"图像加载成功，正在进行转换...\")\r\n        converted = source.convert(type=\"image/webp\")      # 转换为webp\r\n        extension = converted.result().extension\r\n        output_path = os.path.join(os.path.dirname(source_path), \"test.\" + extension)\r\n        converted.to_file(output_path)\r\n        print(\"图像转换成功，已保存为%s\" % output_path)\r\n        print_file_size(output_path)\r\n        print(\"按下任意键关闭...\")\r\n        msvcrt.getch()  # 等待用户按下任意键\r\n    except tinify.AccountError as e:\r\n        print(\"账户错误：%s\" % e.message)\r\n    except tinify.ClientError as e:\r\n        print(\"客户端错误：%s\" % e.message)\r\n    except tinify.ServerError as e:\r\n        print(\"服务器错误：%s\" % e.message)\r\n    except tinify.ConnectionError as e:\r\n        print(\"连接错误：%s\" % e.message)\r\n    except Exception as e:\r\n        print(\"发生异常：%s\" % str(e))\r\n\r\n# 设置API密钥\r\ntinify.key = \"JRk8s8gxWYpsd6PYd925SSN172Hffrkhg\"\r\n# 设置源图像路径\r\nsource_path = \"test.JPEG\"\r\n# 优化图像\r\noptimize_image(source_path)\r\n```\r\n\r\n\r\n\r\n### 为何type要使用数组？\r\n\r\n在使用 Tinify 转换图像格式时，`type` 参数接受一个数组。这是因为 Tinify 提供了一种方便的方式，允许你指定多个目标格式进行转换。通过将多个格式包含在数组中，你可以一次性将源图像转换为多个目标格式。\r\n\r\n在你的代码示例中，使用 `type=[\"image/webp\"]` 将源图像转换为 WebP 格式。如果你想同时将图像转换为多个格式，只需在 `type` 数组中添加更多元素即可，例如：\r\n\r\n```python\r\nconverted = source.convert(type=[\"image/webp\", \"image/jpeg\", \"image/png\"])\r\n```\r\n\r\n这样，源图像将转换为 WebP、JPEG 和 PNG 格式的三个副本。\r\n\r\n通过使用数组，Tinify 提供了一种简洁而灵活的方式，方便地指定多个目标格式。\r\n\r\n### 如果我只想要webp格式，不使用数组可以吗\r\n\r\n是的，如果你只想将图像转换为 WebP 格式，你可以直接将 `\"image/webp\"` 作为字符串传递给 `type` 参数，而无需使用数组。以下是示例代码：\r\n\r\n```python\r\nconverted = source.convert(type=\"image/webp\")\r\n```\r\n\r\n这样，源图像将仅转换为 WebP 格式，而不会生成其他格式的副本。\r\n\r\n使用数组的主要优势是在单个转换操作中指定多个目标格式。如果只需要一个格式，直接传递字符串即可。\r\n\r\n### 再次完善代码：打开文件框，选择原图\r\n\r\n补充了代码，实现在窗口里选择原图，然后执行代码，输出为转换后的图片。\r\n\r\n```python\r\n\r\nimport tinify\r\nimport os\r\nimport tkinter as tk\r\nfrom tkinter import filedialog\r\nimport msvcrt\r\n\r\ndef print_file_size(filepath):\r\n    size = os.path.getsize(filepath) / 1024\r\n    print(\"文件大小: %d kb\" % size)\r\n\r\ndef optimize_image(source_path):\r\n    try:\r\n        print_file_size(source_path)\r\n        print(\"开始读取图像到tinyPNG服务器...\")\r\n        source = tinify.from_file(source_path)\r\n        print(\"图像加载成功，正在进行转换...\")\r\n        converted = source.convert(type=\"image/webp\")      # 转换为webp\r\n        extension = converted.result().extension\r\n        output_path = os.path.join(os.path.dirname(source_path), \"test.\" + extension)\r\n        converted.to_file(output_path)\r\n        print(\"图像转换成功，已保存为%s\" % output_path)\r\n        print_file_size(output_path)\r\n        print(\"按下任意键关闭...\")\r\n        msvcrt.getch()  # 等待用户按下任意键\r\n    except tinify.AccountError as e:\r\n        print(\"账户错误：%s\" % e.message)\r\n    except tinify.ClientError as e:\r\n        print(\"客户端错误：%s\" % e.message)\r\n    except tinify.ServerError as e:\r\n        print(\"服务器错误：%s\" % e.message)\r\n    except tinify.ConnectionError as e:\r\n        print(\"连接错误：%s\" % e.message)\r\n    except Exception as e:\r\n        print(\"发生异常：%s\" % str(e))\r\n\r\ndef open_file_dialog():\r\n    root = tk.Tk()\r\n    root.withdraw()\r\n    file_path = filedialog.askopenfilename()\r\n    if file_path:\r\n        optimize_image(file_path)\r\n\r\n# 设置API密钥\r\ntinify.key = \"JRk8s8gxWYpsd6PY925SSN172Hffrkhg\"\r\n\r\n# 打开文件对话框选择图像文件并优化\r\nopen_file_dialog()\r\n```\r\n\r\n### 代码优化: 文件框过滤文件，只显示图片文件\r\n\r\n```python\r\nimport tinify\r\nimport os\r\nimport tkinter as tk\r\nfrom tkinter import filedialog\r\nimport msvcrt\r\n\r\ndef print_file_size(filepath):\r\n    size = os.path.getsize(filepath) / 1024\r\n    print(\"文件大小: %d kb\" % size)\r\n\r\ndef optimize_image(source_path):\r\n    try:\r\n        print_file_size(source_path)\r\n        print(\"开始读取图像到tinyPNG服务器...\")\r\n        source = tinify.from_file(source_path)\r\n        print(\"图像加载成功，正在进行转换...\")\r\n        converted = source.convert(type=\"image/webp\")      # 转换为webp\r\n        extension = converted.result().extension\r\n        output_path = os.path.join(os.path.dirname(source_path), \"test.\" + extension)\r\n        converted.to_file(output_path)\r\n        print(\"图像转换成功，已保存为%s\" % output_path)\r\n        print_file_size(output_path)\r\n        print(\"按下任意键关闭...\")\r\n        msvcrt.getch()  # 等待用户按下任意键\r\n    except tinify.AccountError as e:\r\n        print(\"账户错误：%s\" % e.message)\r\n    except tinify.ClientError as e:\r\n        print(\"客户端错误：%s\" % e.message)\r\n    except tinify.ServerError as e:\r\n        print(\"服务器错误：%s\" % e.message)\r\n    except tinify.ConnectionError as e:\r\n        print(\"连接错误：%s\" % e.message)\r\n    except Exception as e:\r\n        print(\"发生异常：%s\" % str(e))\r\n\r\ndef is_image_file(file_path):\r\n    image_extensions = ['.png', '.jpg', '.jpeg', '.gif', '.bmp', '.jfif']\r\n    _, file_extension = os.path.splitext(file_path)\r\n    return file_extension.lower() in image_extensions\r\n\r\ndef open_file_dialog():\r\n    root = tk.Tk()\r\n    root.withdraw()\r\n    file_path = filedialog.askopenfilename(filetypes=[(\"Image Files\", \"*.png;*.jpg;*.jpeg;*.gif;*.bmp;*.jfif\")])\r\n    if file_path and is_image_file(file_path):\r\n        optimize_image(file_path)\r\n\r\n# 设置API密钥\r\ntinify.key = \"JRk8s8gxWYpsd6PY925SSN172Hffrkhg\"\r\n\r\n# 打开文件对话框选择图像文件并优化\r\nopen_file_dialog()\r\n```\r\n\r\n:::info\r\n\r\npython的tkinter库，虽然过滤了只显示图片文件，但是仍然会显示文件夹。这是tikinter局限\r\n\r\n:::"},{"id":"育儿费用","metadata":{"permalink":"/blog/育儿费用","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/05-08-xyz育儿费用.md","source":"@site/blog/2024/05-08-xyz育儿费用.md","title":"xyz育儿费用","description":"厂方租金每月 3000","date":"2024-05-02T12:55:00.000Z","tags":[],"readingTime":0.45,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-05-02 12:55","slug":"育儿费用"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"使用python来调用tinyPNG API压缩图片","permalink":"/blog/使用python来调用tinyPNG API压缩图片"},"nextItem":{"title":"第一次做头等舱","permalink":"/blog/第一次做头等舱"}},"content":"厂方租金每月 3000\r\n托管班每月1300 \r\n托管班吃饭每月450\r\n学校早餐每月 450\r\n每月我固定出 5200 元。\r\n\r\n校服1500，班服200，春游\r\n还他妈的喂狗喂了五千\r\n\r\n电话手表600\r\n电话手表每月 30 会员\r\n客厅电视一年 300 会员\r\nipad 2700\r\n两个书包1000\r\n补牙500\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"第一次做头等舱","metadata":{"permalink":"/blog/第一次做头等舱","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-21-第一次做头等舱.md","source":"@site/blog/2024/04-21-第一次做头等舱.md","title":"第一次做头等舱","description":"因为买不到票，第一次做头等舱，8000多的价格。有种VIP的感觉！","date":"2024-04-21T23:00:00.000Z","tags":[],"readingTime":0.43,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-21 23:00","slug":"第一次做头等舱"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"xyz育儿费用","permalink":"/blog/育儿费用"},"nextItem":{"title":"禁止折腾！","permalink":"/blog/禁止折腾！"}},"content":"因为买不到票，第一次做头等舱，8000多的价格。有种VIP的感觉！\r\n\r\n有菜单，可以点菜。有小蛋糕，茶点、酒水。\r\n\r\n缅甸落地签过程还算顺利。出了机场用Grab打滴滴，丝滑体验。\r\n\r\n入住温德姆酒店。门童提行李，我拒绝了。不想给小费。\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"禁止折腾！","metadata":{"permalink":"/blog/禁止折腾！","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-12-禁止折腾！.md","source":"@site/blog/2024/04-12-禁止折腾！.md","title":"禁止折腾！","description":"不要再折腾插件、主题了！！费力不讨好！投入时间和金钱，没产出！","date":"2024-04-12T22:19:00.000Z","tags":[],"readingTime":0.28,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-12 22:19","slug":"禁止折腾！"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"第一次做头等舱","permalink":"/blog/第一次做头等舱"},"nextItem":{"title":"python猜数字游戏源码","permalink":"/blog/python猜数字游戏源码"}},"content":"不要再折腾插件、主题了！！费力不讨好！投入时间和金钱，没产出！\r\n\r\n化繁为简！大道至简。\r\n\r\n去掉spetra插件。用尽量少的插件来运营，以便提高网速。\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"python猜数字游戏源码","metadata":{"permalink":"/blog/python猜数字游戏源码","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-10-python猜数字游戏源码.md","source":"@site/blog/2024/04-10-python猜数字游戏源码.md","title":"python猜数字游戏源码","description":"这是python猜数字游戏的源代码，非常加单。可以学习。","date":"2024-04-10T01:33:00.000Z","tags":[],"readingTime":0.495,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-10 01:33","slug":"python猜数字游戏源码"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"禁止折腾！","permalink":"/blog/禁止折腾！"},"nextItem":{"title":"人情世故","permalink":"/blog/人情世故"}},"content":"这是python猜数字游戏的源代码，非常加单。可以学习。\r\n\r\n``` python\r\nimport random\r\n\r\nprint(\"Welcome to the guessing game!\")\r\n\r\n# Generate a random number between 1 and 100\r\nsecret_number = random.randint(1, 100)\r\n\r\nwhile True:\r\n    # Get a guess from the player\r\n    guess = int(input(\"Enter a number between 1 and 100: \"))\r\n\r\n    # Check if the guess is correct\r\n    if guess == secret_number:\r\n        print(\"You guessed it! The secret number was {}\".format(secret_number))\r\n        break\r\n    elif guess < secret_number:\r\n        print(\"Your guess is too low\")\r\n    else:\r\n        print(\"Your guess is too high\")\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"人情世故","metadata":{"permalink":"/blog/人情世故","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-09-人情世故.md","source":"@site/blog/2024/04-09-人情世故.md","title":"人情世故","description":"不要主动跟别人说自己的“短处”，包括：","date":"2024-04-09T18:22:00.000Z","tags":[],"readingTime":1.265,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-09 18:22","slug":"人情世故"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"python猜数字游戏源码","permalink":"/blog/python猜数字游戏源码"},"nextItem":{"title":"WordPress笔记","permalink":"/blog/WordPress笔记"}},"content":"不要主动跟别人说自己的“短处”，包括：\r\n\r\n* 不要说自己正在工作的上的“短处”\r\n* 不要说自己公司的短处\r\n* 不要说自己正在做的事的“短处\r\n\r\n会被坏人利用！\r\n\r\n---\r\n\r\n跟主管领导要直接打电话！不要总是发微信。电话交谈的信息，2分钟的交谈，会有很多内容、感情。\r\n\r\n发微信做不到这个地步。\r\n\r\n---\r\n\r\n<!-- truncate -->\r\n\r\n### 今天犯的错误：\r\n\r\n跟同事谈论代码，说自己写的代码有点乱凿凿，？！不要自曝其短好不好？这样会被小人利用。\r\n\r\n### 今天的小成就：\r\n\r\n组织小组团建，邀请小组同事团建也有点小小的技巧。如何巧妙的说话，如何巧妙的借势，如何巧妙的邀请到小组同事。\r\n\r\n\r\n\r\n### 反着说话\r\n\r\n不要说你自己的意见是如何如何，而是要说情势所迫，不得不如此。\r\n\r\n### 瘦田无人耕，耕了有人争"},{"id":"WordPress笔记","metadata":{"permalink":"/blog/WordPress笔记","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-04-WordPress笔记.md","source":"@site/blog/2024/04-04-WordPress笔记.md","title":"WordPress笔记","description":"require DIR . '/wp-blog-header.php';这个什么意思","date":"2024-04-04T20:54:00.000Z","tags":[],"readingTime":1.13,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-04 20:54","slug":"WordPress笔记"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"人情世故","permalink":"/blog/人情世故"},"nextItem":{"title":"2024年4月1日","permalink":"/blog/2024年4月1日"}},"content":"### require __DIR__ . '/wp-blog-header.php';这个什么意思\r\n\r\n这行代码的意思是：**使用 `require` 函数载入 `wp-blog-header.php` 文件**。\r\n\r\n**具体解释如下：**\r\n\r\n- `require` 函数：这是一个 PHP 函数，用于载入另一个 PHP 文件。\r\n- `__DIR__`：这是一个 PHP 魔术常量，代表当前文件的目录。\r\n- `/wp-blog-header.php`：这是一个 WordPress 核心文件，负责加载 WordPress 环境和模板。\r\n\r\n**因此，这行代码的作用是：**\r\n\r\n- 将 `wp-blog-header.php` 文件载入到当前脚本中。\r\n- 初始化 WordPress 环境，包括加载数据库配置、主题、插件等。\r\n- 告诉 WordPress 程序要输出主题内容到访客浏览器。\r\n\r\n**总结：**\r\n\r\n这行代码是 WordPress 程序启动过程中的一部分，它负责载入核心文件并启动 WordPress 程序。\r\n\r\n\r\n\r\n<!-- truncate -->\r\n\r\n### 要使博客头部不显示特色图像（feature image），你需要删除以下代码：\r\n\r\ndocy/single.php\r\n\r\n```php\r\nthe_post_thumbnail('full', array( 'class' => 'mb-4 featured-image' ) );\r\n```"},{"id":"2024年4月1日","metadata":{"permalink":"/blog/2024年4月1日","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-01-2024年4月1日.md","source":"@site/blog/2024/04-01-2024年4月1日.md","title":"2024年4月1日","description":"1. 利用这个项目，跟经理搭上线。电话联系。","date":"2024-04-01T18:54:00.000Z","tags":[],"readingTime":1.005,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-04-01 18:54","slug":"2024年4月1日"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"WordPress笔记","permalink":"/blog/WordPress笔记"},"nextItem":{"title":"3月29号","permalink":"/blog/2024/03/29/3月29号"}},"content":"1. 利用这个项目，跟经理搭上线。电话联系。\r\n\r\n<!-- truncate -->\r\n\r\n2. 好用的扫描王，因为政策原因，不能上传到google drive, onedrive了。阉割的够厉害。\r\n\r\n3. [Node.js: The Documentary | An origin story (youtube.com)](https://www.youtube.com/watch?v=LB8KwiiUGy0)\r\n   Nodejs的发展史，包括创始人访谈。创始人出走，公司分家，又合并。终于到了Node.js的今天。这个网站也是依赖于Node.js来创建的。\r\n\r\n4. 轻易升级了docusaurus 3.2，然后报错，找不到解决方案。尝试退回，一顿胡乱操作。\r\n\r\n   终于成功能使用了。\r\n   以后轻易不要升级了。毕竟这个改变很小很小。\r\n\r\n   \r\n\r\n6. 最好用还是WordPress，只是搭建WordPress每年要500多块的成本。不划算。所以使用github Page的免费空间，使用静态网站生成。"},{"id":"/2024/03/29/3月29号","metadata":{"permalink":"/blog/2024/03/29/3月29号","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-29-3月29号.md","source":"@site/blog/2024/03-29-3月29号.md","title":"3月29号","description":"小学【成绩等级的最新登记要求】","date":"2024-03-29T16:40:00.000Z","tags":[],"readingTime":0.41,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-29 16:40"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"2024年4月1日","permalink":"/blog/2024年4月1日"},"nextItem":{"title":"20240328","permalink":"/blog/2024/03/28/20240328"}},"content":"小学【成绩等级的最新登记要求】\r\nA+（95-100） A（90-94） A-（85-89）\r\nB+（80-84）  B（75-79） \r\nC+（70-74）\r\n\r\n<!-- truncate -->\r\n\r\n\r\n\r\n网站MySQL服务总是自动停止。不省心。不过别放弃。没有简单的事情。\r\n\r\n刷抖音、看电视，简单，但是那不叫“事情”。 如果你发抖音，制作电视，那才叫“事情”。"},{"id":"/2024/03/28/20240328","metadata":{"permalink":"/blog/2024/03/28/20240328","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-28-20240328.md","source":"@site/blog/2024/03-28-20240328.md","title":"20240328","description":"我记得每天睡觉前最后一个关注的粉丝。","date":"2024-03-28T21:37:00.000Z","tags":[],"readingTime":0.715,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-28 21:37"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"3月29号","permalink":"/blog/2024/03/29/3月29号"},"nextItem":{"title":"用python给Markdown文件批量添加头部yaml信息","permalink":"/blog/用python给Markdown文件批量添加头部yaml信息"}},"content":"我记得每天睡觉前最后一个关注的粉丝。\r\n\r\n目前的总的总结是:\r\n\r\n\r\n是我觉得有价值的，没人看，\r\n\r\n我觉得是没意思的，是大批量转发\r\n\r\n<!-- truncate -->\r\n\r\n领导在“可与不可”之间认可了我，给了我机会。想要送点礼。却不知如何去做。:cry:\r\n\r\n---\r\n\r\n决定不要陷入粉丝增长的焦虑当中了。增长，减少，不要太关注！不然会走火入魔。\r\n\r\n主要还是要创作内容。\r\n\r\n12:30凌晨半夜还增加了一个粉丝。谢谢您！"},{"id":"用python给Markdown文件批量添加头部yaml信息","metadata":{"permalink":"/blog/用python给Markdown文件批量添加头部yaml信息","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-27-用python给Markdown文件批量添加头部yaml信息.md","source":"@site/blog/2024/03-27-用python给Markdown文件批量添加头部yaml信息.md","title":"用python给Markdown文件批量添加头部yaml信息","description":"docusaurus下某个文库写了几十篇doc了，但是当时没有添加头部date信息，导致docusaurus每次更新时，页面底部显示的最近更新时间都是npm build的时间，而不是文件创建时的时间。","date":"2024-03-27T16:03:00.000Z","tags":[],"readingTime":2.215,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-27 16:03","slug":"用python给Markdown文件批量添加头部yaml信息"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"20240328","permalink":"/blog/2024/03/28/20240328"},"nextItem":{"title":"建设网站的成本流水账","permalink":"/blog/网站建设成本"}},"content":"docusaurus下某个文库写了几十篇doc了，但是当时没有添加头部date信息，导致docusaurus每次更新时，页面底部显示的最近更新时间都是npm build的时间，而不是文件创建时的时间。\r\n\r\n给头部添加date信息，可以避免这个问题。\r\n\r\n但是已经有几十个doc，我不想一个一个打开来添加。\r\n\r\n<!-- truncate -->\r\n\r\n大神python出场。\r\n\r\n```python\r\nimport os\r\nimport glob\r\nimport fileinput\r\nimport datetime\r\n\r\n# 获取当前日期和时间\r\ncurrent_datetime = datetime.datetime.now()\r\n\r\n# 定义 YAML 内容\r\nyaml_content = \"\"\"---\r\ndate: {date}\r\n---\"\"\".format(date=current_datetime.strftime(\"%Y-%m-%d %H:%M\"))\r\n\r\n# 获取当前目录路径\r\ndirectory = os.getcwd()\r\n\r\n# 遍历当前目录下的所有 .md 文件\r\nfor file_path in glob.glob(os.path.join(directory, '*.md')):\r\n    # 读取文件内容\r\n    with open(file_path, 'r', encoding='utf-8') as file:\r\n        lines = file.readlines()\r\n\r\n    # 在文件头部插入 YAML 内容\r\n    lines.insert(0, yaml_content + '\\n')\r\n\r\n    # 将修改后的内容写回文件\r\n    with open(file_path, 'w', encoding='utf-8') as file:\r\n        file.writelines(lines)\r\n```\r\n\r\n---\r\n\r\n如果要遍历目录下的子文件夹里的Markdown文件，\r\n\r\n要遍历目录下的所有子目录中的 Markdown 文件，可以使用递归方法。以下是修改后的示例代码：\r\n\r\n```python\r\nimport os\r\nimport glob\r\nimport fileinput\r\nimport datetime\r\n\r\n# 获取当前日期和时间\r\ncurrent_datetime = datetime.datetime.now()\r\n\r\n# 定义 YAML 内容\r\nyaml_content = \"\"\"---\r\ndate: {date}\r\n---\"\"\".format(date=current_datetime.strftime(\"%Y-%m-%d %H:%M\"))\r\n\r\n# 定义递归函数\r\ndef process_directory(directory):\r\n    # 遍历目录下的所有文件和子目录\r\n    for entry in os.scandir(directory):\r\n        if entry.is_file() and entry.name.endswith('.md'):\r\n            # 处理 Markdown 文件\r\n            with open(entry.path, 'r', encoding='utf-8') as file:\r\n                lines = file.readlines()\r\n\r\n            # 在文件头部插入 YAML 内容\r\n            lines.insert(0, yaml_content + '\\n')\r\n\r\n            # 将修改后的内容写回文件\r\n            with open(entry.path, 'w', encoding='utf-8') as file:\r\n                file.writelines(lines)\r\n        elif entry.is_dir():\r\n            # 递归处理子目录\r\n            process_directory(entry.path)\r\n\r\n# 获取当前目录路径\r\ndirectory = os.getcwd()\r\n\r\n# 调用递归函数处理目录及其子目录中的 Markdown 文件\r\nprocess_directory(directory)\r\n```"},{"id":"网站建设成本","metadata":{"permalink":"/blog/网站建设成本","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-26-建设网站的成本流水账.md","source":"@site/blog/2024/03-26-建设网站的成本流水账.md","title":"建设网站的成本流水账","description":"1. 购买docy主题50￥;白白浪费，已经不再使用。","date":"2024-03-26T22:53:00.000Z","tags":[],"readingTime":0.215,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-26 22:53","slug":"网站建设成本"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"用python给Markdown文件批量添加头部yaml信息","permalink":"/blog/用python给Markdown文件批量添加头部yaml信息"},"nextItem":{"title":"3月26号","permalink":"/blog/三月26号"}},"content":"1. 购买docy主题50￥;白白浪费，已经不再使用。\r\n2. 购买eazydoc插件60￥\r\n3. 购买elementor pro分销 100￥\r\n4. 腾讯云轻量服务器；\r\n\r\n\r\n\r\n<!-- truncate -->"},{"id":"三月26号","metadata":{"permalink":"/blog/三月26号","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-26-3月26号.md","source":"@site/blog/2024/03-26-3月26号.md","title":"3月26号","description":"突破100个粉丝！","date":"2024-03-26T20:13:00.000Z","tags":[],"readingTime":1.315,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-26 20:13","slug":"三月26号"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"建设网站的成本流水账","permalink":"/blog/网站建设成本"},"nextItem":{"title":"3月25号","permalink":"/blog/3月25号"}},"content":"突破100个粉丝！\r\n\r\n加油！每天有个期待了。虽然不是什么大事。也是个渺渺众生中一个小人物的一点小小的悲喜。\r\n\r\n![image-20240326232204573](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/image-20240326232204573.png)\r\n\r\n我的文字可以传递个100个人。虽然这100个人并不一定都看。\r\n\r\n<!-- truncate -->\r\n\r\nPython伟大，CMD命令行也挺好用。有些工作，电脑自带的cmd命令行也挺好用。只是没有python那么系统化。所以python不是凭空来的，它的出现，也是在cmd基础上的。\r\n\r\n用VBA同样能实现同样的功能。只是总体而言，实现同一个功能的情况下，Python最简单，最快捷，最方便。\r\n\r\n估计今天不会再涨粉了。谢谢各位看官大佬门。虽然我不会在公众号直接给你们发信息。没必要打扰粉丝们。大家只默默的守护者就好。我写的你喜欢看，那就足够了！在这里写的，估计粉丝们也看不到。即使看到，也是几年以后的事情。"},{"id":"3月25号","metadata":{"permalink":"/blog/3月25号","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-25-3月25号.md","source":"@site/blog/2024/03-25-3月25号.md","title":"3月25号","description":"剪头发。树立形象。头发太长了。早该剪了。","date":"2024-03-25T22:58:00.000Z","tags":[],"readingTime":1.98,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-25 22:58","slug":"3月25号"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"3月26号","permalink":"/blog/三月26号"},"nextItem":{"title":"bat命令行脚本自动执行git commit和git push","permalink":"/blog/bat命令行脚本自动执行git commit和git push"}},"content":"剪头发。树立形象。头发太长了。早该剪了。\r\n\r\n吃到一顿桂林米粉。\r\n\r\n晚上想不吃，减肥。坚持到现在。结果剪头发回来没忍住，买了一瓶酒，和一包花生。\r\n\r\n现在还想再去吃米粉。。。坚持住！！！！！！！！！！！！！！！！！！！\r\n\r\n===管住嘴！！！！！！！！！！！！！！！！！！！！！！！===\r\n\r\n<!-- truncate -->\r\n\r\n---\r\n\r\n百度真的是技术有限，跟google差远了。一个网站google已经收录了几百条页面，百度才收录一条。百度在珍惜它的爬虫资源。我的天，你做搜索引擎的，居然怕浪费你的爬虫。我屮艸芔茻。\r\n\r\n---\r\n\r\n![image-20240325230608624](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/image-20240325230608624.png)\r\n\r\n公众号文章，这几天粉丝数涨了不少。虽然还是很少。。。加油！！！继续产出高质量文章！！！\r\n\r\n**别太在意“高质量”这三个字，有时候你抄袭的也能被评为“高质量”。！！！！！**\r\n\r\n很多东西，别太当真:cry:\r\n\r\n认真你就输了！！世界就是如此残酷！！！:signal_strength:\r\n\r\n---\r\n\r\n不要读论语！！论语害死人！！国学害死人！！论语、国学，就是让你做个傻逼老实人！:warning:如果要读，必须批判地读。！\r\n\r\n---\r\n\r\n什么？你觉得静态网站生成器，每次都要 npm build然后上传，这个过程比较low？人家GitHub都没解决而是积极拥抱的事情，你要瞎操心？！！！\r\n\r\n静态网站就是快！！！有利有弊！！没有十全十美！！！敢号称“十全”的只有乾隆。你没有乾隆的0.0000000000000000000000000000000000001%，就不要妄想十全了！\r\n\r\n有个静态博客，有个免费的GitHub，让你免费做空间，就很好了。！！！别在奢求了！！！"},{"id":"bat命令行脚本自动执行git commit和git push","metadata":{"permalink":"/blog/bat命令行脚本自动执行git commit和git push","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-24-bat命令行脚本自动执行git commit和git push.md","source":"@site/blog/2024/03-24-bat命令行脚本自动执行git commit和git push.md","title":"bat命令行脚本自动执行git commit和git push","description":"用bat命令行脚本，自动执行git commit, git push。点击这个脚本，就可以自动运行了。chcp 65001 > nul是为了让终端显示中文，否则会乱码。","date":"2024-03-24T22:14:00.000Z","tags":[],"readingTime":1.05,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-24 22:14","slug":"bat命令行脚本自动执行git commit和git push"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"3月25号","permalink":"/blog/3月25号"},"nextItem":{"title":"用python自动化生成Markdown文件的yml头部信息","permalink":"/blog/用python自动化生成Markdown文件的yml头部信息"}},"content":"用bat命令行脚本，自动执行git commit, git push。点击这个脚本，就可以自动运行了。`chcp 65001 > nul`是为了让终端显示中文，否则会乱码。\r\n\r\n好用的要哭！从此告别以下步骤：\r\n\r\n1. git add .\r\n2. git commit -m 'test xcfdf'\r\n3. git push\r\n\r\n<!-- truncate -->\r\n\r\n![image-20240324222044694](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/image-20240324222044694.png)\r\n\r\n``` bat title='/auto git push.bat'\r\n@echo off\r\nchcp 65001 > nul\r\necho 正在执行 Git 命令...\r\n\r\necho 添加更改到git...\r\ngit add .\r\ntimeout /t 2\r\n\r\necho 正在提交更改...\r\ngit commit -m \"自动提交\"\r\ntimeout /t 2\r\n\r\necho 正在推送更改到远程仓库...\r\ngit push\r\ntimeout /t 2\r\n\r\necho Git 命令执行成功。\r\npause\r\n```\r\n\r\n\r\n\r\n批处理命令自动git push到GitHub，GitHub action自动执行deploy生成网页，哎呀，妈耶，过程太丝滑，全自动！\r\n\r\n写好博客后，点击以下这个批处理脚本，就万事大吉了！！！"},{"id":"用python自动化生成Markdown文件的yml头部信息","metadata":{"permalink":"/blog/用python自动化生成Markdown文件的yml头部信息","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-24-用python自动化生成Markdown文件的yml头部信息.md","source":"@site/blog/2024/03-24-用python自动化生成Markdown文件的yml头部信息.md","title":"用python自动化生成Markdown文件的yml头部信息","description":"用python自动化生成Markdown文件，并自动填入yml头部信息。你可以在代码中修改，加入自己想要自动化填入的信息，比如可以自动化填入作者、标题等等，全部都可以！","date":"2024-03-24T21:22:00.000Z","tags":[],"readingTime":1.225,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-24 21:22","slug":"用python自动化生成Markdown文件的yml头部信息"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"bat命令行脚本自动执行git commit和git push","permalink":"/blog/bat命令行脚本自动执行git commit和git push"},"nextItem":{"title":"用python把多个pdf合并为一个PDF并自动添加书签","permalink":"/blog/用python把多个pdf合并为一个PDF并自动添加书签"}},"content":"用python自动化生成Markdown文件，并自动填入yml头部信息。你可以在代码中修改，加入自己想要自动化填入的信息，比如可以自动化填入作者、标题等等，全部都可以！\r\n\r\n我又让它自动填入`<!-- truncate -->\\`命令，这样在docusaurus博客列表中，就会显示摘要了，不用每次自己手动输入这个难写的命令了。\r\n\r\n伟大的python！\r\n\r\n<!-- truncate -->\r\n\r\n```python title=\"/auto creat markdown file and auto fill in yml.py\"\r\n\r\n# 获取当前日期和时间\r\ncurrent_datetime = datetime.datetime.now()\r\n\r\n# 构建 Markdown 文件名（去掉扩展名）\r\nmd_filename = f\"{current_datetime.year}年{current_datetime.month}月{current_datetime.day}日\"\r\n\r\n# 构建 YAML 内容\r\nyaml_content = \"\"\"---\r\ntitle: {title}\r\nauthor: Your Name\r\ndate: {date}\r\n---\"\"\".format(title=md_filename, date=current_datetime)\r\n\r\n# 写入 Markdown 文件内容\r\nmd_content = \"\\n\\n\\n<!-- truncate -->\\n\"\r\n\r\nwith open(f\"{md_filename}.md\", \"w\", encoding=\"utf-8\") as file:\r\n    file.write(yaml_content)\r\n    file.write(md_content)\r\n\r\nprint(f\"Markdown 文件 {md_filename}.md 创建成功，YAML 头信息和内容已写入文件。\")\t\r\n```\r\n\r\n:::tip\r\n\r\n注意，如果自动填入的内容是中文，encoding=\"utf-8\"必须要写；否则填入的是乱码\r\n\r\n:::"},{"id":"用python把多个pdf合并为一个PDF并自动添加书签","metadata":{"permalink":"/blog/用python把多个pdf合并为一个PDF并自动添加书签","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-20-用python把多个pdf合并为一个PDF并自动添加书签.md","source":"@site/blog/2024/03-20-用python把多个pdf合并为一个PDF并自动添加书签.md","title":"用python把多个pdf合并为一个PDF并自动添加书签","description":"这是以前的一个python小程序。假如文件夹下有5个PDF文件，他们的名字分别是：","date":"2024-03-20T00:00:00.000Z","tags":[],"readingTime":2.18,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-20T00:00:00.000Z","slug":"用python把多个pdf合并为一个PDF并自动添加书签"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"用python自动化生成Markdown文件的yml头部信息","permalink":"/blog/用python自动化生成Markdown文件的yml头部信息"},"nextItem":{"title":"docusaurus和腾讯云服务器的朴素沟通","permalink":"/blog/docusaurus和腾讯云服务器的朴素沟通"}},"content":"这是以前的一个python小程序。假如文件夹下有5个PDF文件，他们的名字分别是：\r\n\r\n1.  hello\r\n2.  world\r\n3.  nihao\r\n4.  shijie\r\n5.  thankyou\r\n\r\n----\r\n\r\n把他们合并到成一个jieshao.pdf文件，并且用上面5个文件的名字来作为jieshao.pdf的书签。\r\n\r\n*<!-- truncate -->*\r\n\r\n:::info\r\n\r\n这个函数会遍历要求目录下的所有文件，将以  .pdf 结尾的所有pdf合并成一个新的pdf，并保存在 file_dir 目录下\r\n\r\n:::\r\n\r\n```python\r\nimport os\r\nimport os.path\r\nfrom PyPDF2 import PdfFileReader, PdfFileWriter\r\nimport time\r\n\r\n##########################找到 filepath 下的所有pdf，将地址返回########################\r\ndef getFileName(filepath):\r\n    list1=[]\r\n    for root, dirs, files in os.walk(filepath, topdown=False):\r\n        for name in files:\r\n            if name.endswith(\".pdf\"):\r\n                list1.append(os.path.join(root, name))\r\n    return list1\r\n\r\n##########################合并同一个文件夹下所有PDF文件########################\r\ndef MergePDF(filepath, outfile):\r\n    output = PdfFileWriter()\r\n    outputPages = 0\r\n    pdf_fileName = getFileName(filepath)\r\n    for each_file in pdf_fileName:\r\n        print(\"adding %s\" % each_file)\r\n        # 读取源pdf文件\r\n        input = PdfFileReader(open(each_file, \"rb\"))\r\n\r\n        # 如果pdf文件已经加密，必须首先解密才能使用pyPdf\r\n        if input.isEncrypted == True:\r\n            input.decrypt(\"map\")\r\n\r\n        # 获得源pdf文件中页面总数\r\n        pageCount = input.getNumPages()\r\n        outputPages += pageCount\r\n        print(\"%s has %d pages\" % (each_file, pageCount))\r\n\r\n        # 分别将page添加到输出output中\r\n        for iPage in range(pageCount):\r\n            output.addPage(input.getPage(iPage))\r\n\r\n        # 添加书签,以pdf名字命名书签,并且有书签名中带页码范围\r\n        x=outputPages-pageCount  #当前PDF到了第几页\r\n        output.addBookmark(\r\n            title=each_file.split(\"\\\\\")[-1]+str(x+1)+'-'+str(x+pageCount),pagenum=x)\r\n\r\n    print(\"All Pages Number: \" + str(outputPages))\r\n    # 最后写pdf文件\r\n    outputStream = open(os.path.join(filepath, outfile), \"wb\")\r\n    output.write(outputStream)\r\n    outputStream.close()\r\n    print(\"finished\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    time1 = time.time()\r\n    # 这里保存pdf文件的目录    \r\n    file_dir =r'C:\\Users\\frankelin\\Documents\\湖南醴陵旅游' \r\n    # 这里保存生成文件的名字\r\n    out = u\"jieshao.pdf\" \r\n    #这个函数会遍历要求目录下的所有文件，将以  .pdf 结尾的所有pdf合并成一个新的pdf，并保存在 file_dir 目录下\r\n    MergePDF(file_dir, out)\r\n    time2 = time.time()\r\n    print(u'总共耗时： %.4f s' % (time2 - time1))\r\n\r\n```"},{"id":"docusaurus和腾讯云服务器的朴素沟通","metadata":{"permalink":"/blog/docusaurus和腾讯云服务器的朴素沟通","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-19-docusaurus和腾讯云服务器的朴素沟通.md","source":"@site/blog/2024/03-19-docusaurus和腾讯云服务器的朴素沟通.md","title":"docusaurus和腾讯云服务器的朴素沟通","description":"本地电脑，访问远程主机的localhost:3000","date":"2024-03-19T00:00:00.000Z","tags":[],"readingTime":6.74,"hasTruncateMarker":true,"authors":[],"frontMatter":{"date":"2024-03-19T00:00:00.000Z","slug":"docusaurus和腾讯云服务器的朴素沟通"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"用python把多个pdf合并为一个PDF并自动添加书签","permalink":"/blog/用python把多个pdf合并为一个PDF并自动添加书签"},"nextItem":{"title":"20240322","permalink":"/blog/20240322"}},"content":"### 本地电脑，访问远程主机的localhost:3000\r\n\r\nssh -L 3000:localhost:3000 root@121.220.83.133\r\n\r\n这个命令会将本地电脑的 `3000` 端口转发到远程主机上的 `localhost:3000` 端口。\r\n\r\nSSH 端口转发是一次性的，只要你关闭了终端窗口，端口转发就会自动停止。\r\n\r\n端口转发只会影响你当前的 SSH 连接以及转发的端口，不会影响你的其他网络连接和端口使用\r\n*<!-- truncate -->*\r\n\r\n\r\n---\r\n\r\n\r\n### 从远程服务器下载（备份）文件到本地\r\n\r\n```bash\r\nscp -r root@121.220.83.133:/www/wwwroot/konglong/* C:\\Users\\frankelin\\Desktop\\shiyishi\\\r\n```\r\n\r\n在这个命令中，`-r` 选项表示要递归复制整个目录树，`root@121.220.83.133:/www/wwwroot/ceshi/*` 指定了要复制的远程目录和文件名通配符，`C:\\Users\\frankelin\\Desktop\\shiyishi\\` 指定了要将文件复制到本地的目录。请注意，路径末尾的斜杠很重要，它表示将文件复制到目录中，而不是将整个远程目录复制到本地目录中。\r\n\r\n在运行命令时，您需要输入远程主机的密码。另外，请确保本地主机和远程主机之间的网络连接正常，并且您具有足够的权限访问远程主机上的文件和目录。\r\n\r\n---\r\n\r\n### Linux主机，设置一键deploy部署静态网站\r\n\r\n制作一个Linux的批处理，首先运行npm run build;然后执行把build里构建好的文件，复制到网站根目录下。\r\n\r\n您可以创建一个Shell脚本，将这两条命令放在一起执行。具体步骤如下：\r\n\r\n**打开终端，使用文本编辑器创建一个新文件，比如说`deploy.sh`：**\r\n\r\n```bash\r\nnano deploy.sh\r\n```\r\n\r\n**在文件中输入以下内容：**\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\n# 进入项目目录\r\necho \"正在进入项目目录：/www/wwwroot/konglong\"\r\ncd /www/wwwroot/konglong\r\n\r\n# 执行npm run build\r\necho \"正在执行npm run build命令\"\r\nnpm run build\r\n\r\n# 复制文件\r\necho \"正在复制文件到目标目录：/www/wwwroot/mart\"\r\ncp -r /www/wwwroot/konglong/build/* /www/wwwroot/mart/\r\n\r\n# 完成\r\necho \"部署已完成\"\r\n```\r\n\r\n这个脚本首先进入项目目录`/www/wwwroot/konglong`，然后执行`npm run build`命令生成打包文件，最后使用`cp`命令将打包文件复制到目标目录`/www/wwwroot/mart`。\r\n\r\n**保存并退出文件。然后使用以下命令为脚本添加可执行权限：**\r\n\r\n```bash\r\nchmod +x deploy.sh\r\n```\r\n\r\n**现在您可以运行这个脚本了。在终端中输入以下命令：**\r\n\r\n```bash\r\n./deploy.sh\r\n```\r\n\r\n这个命令会执行`deploy.sh`脚本，依次执行`npm run build`和`cp`命令。\r\n\r\n请注意，这个脚本中的路径应该根据您的实际情况进行修改。另外，如果您不希望每次运行脚本时都需要输入密码，可以将脚本放在root用户的家目录下，并使用root用户运行脚本。\r\n\r\n**如果您将这个脚本保存在一个可执行的文件中，并将该文件添加到系统的PATH环境变量中，那么您可以在任意目录下运行该命令。**\r\n\r\n以下是将脚本添加到PATH环境变量的步骤：\r\n\r\n1. 将脚本保存为一个可执行文件，比如`deploy.sh`。\r\n2. 将文件复制到/usr/local/bin目录下：\r\n\r\n```bash\r\nsudo cp deploy.sh /usr/local/bin/deploy\r\n```\r\n\r\n这个命令将文件复制到/usr/local/bin目录下，并将文件名改为`deploy`。这个目录通常是系统的PATH环境变量包含的目录之一。\r\n\r\n3. 添加执行权限：\r\n\r\n```bash\r\nsudo chmod +x /usr/local/bin/deploy\r\n```\r\n\r\n这个命令将给`/usr/local/bin/deploy`文件添加可执行权限。\r\n\r\n4. 现在您可以在任意目录下运行该命令了：\r\n\r\n```bash\r\ndeploy\r\n```\r\n\r\n这个命令会执行`/usr/local/bin/deploy`文件，依次执行`npm run build`和`cp`命令。\r\n\r\n请注意，如果您在执行命令时仍然遇到权限问题，可以尝试使用sudo命令以root权限运行该命令。\r\n\r\n---\r\n\r\n```\r\ncat ~/.ssh/id_rsa.pub | ssh root@121.220.83.133 \"mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys\"\r\n```\r\n\r\n---\r\n\r\n### SSH秘钥，这样就不用每次连接服务器都输入密码了\r\n\r\n在默认情况下，每次使用 `scp` 命令都需要输入远程主机的密码。为了避免每次手动输入密码，您可以使用 SSH 公钥认证的方式。\r\n\r\nSSH 公钥认证的基本原理是，在本地主机上生成一对公钥和私钥，将公钥复制到远程主机上，然后将私钥用于本地主机与远程主机之间的认证，这样就可以实现自动登录，不再需要手动输入密码。\r\n\r\n以下是使用 SSH 公钥认证的步骤：\r\n\r\n1. 在本地主机上生成 SSH 密钥对。\r\n\r\n```\r\nssh-keygen -t rsa\r\n```\r\n\r\n按照提示输入文件名和密码。如果您不想设置密码，可以直接按回车键。\r\n\r\n2. 将公钥复制到远程主机上。\r\n\r\n```\r\nssh-copy-id username@remote_host\r\n```\r\n\r\n[如果windows终端执行不了这个代码，则需要安装git,用Git的bash终端来执行这个命令]\r\n\r\n其中 `username` 是远程主机上的用户名，`remote_host` 是远程主机的 IP 地址或主机名。运行命令后，您需要输入远程主机的密码。\r\n\r\n3. 测试 SSH 公钥认证是否生效。\r\n\r\n```\r\nssh root@121.220.83.133\r\n```\r\n\r\n如果 SSH 公钥认证设置成功，您将可以直接登录到远程主机，不再需要输入密码。此时，您可以使用 `scp` 命令将文件上传到远程主机，不再需要手动输入密码。\r\n\r\n---\r\n\r\n```bash\r\nrsync -avzhe ssh --delete C:\\Users\\frankelin\\wiki root@121.220.83.133:/www/wwwroot/konglong\r\n```"},{"id":"20240322","metadata":{"permalink":"/blog/20240322","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/03-22-20240322.md","source":"@site/blog/2024/03-22-20240322.md","title":"20240322","description":"如何创建对SEO友好的URL(分步指南) (ahrefs.com)","date":"2024-03-18T00:00:00.000Z","tags":[],"readingTime":1.355,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2024-03-18T00:00:00.000Z","slug":"20240322"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"docusaurus和腾讯云服务器的朴素沟通","permalink":"/blog/docusaurus和腾讯云服务器的朴素沟通"},"nextItem":{"title":"Haha","permalink":"/blog/流水账"}},"content":"[如何创建对SEO友好的URL(分步指南) (ahrefs.com)](https://ahrefs.com/blog/zh/seo-friendly-urls/#anatomy-of-a-url)\r\n\r\n## 使用子目录提供层次结构\r\n\r\n子目录有助于提供层次感，并提供有用的额外信息。\r\n\r\n例如，使用以下URL：\r\n\r\n```\r\ndomain.com/airpods.html\r\n```\r\n\r\n从URL尚不清楚页面是否在出售AirPods，提供AirPods评论或其它产品。\r\n\r\n现在来看这个：\r\n\r\n```\r\ndomain.com/store/earbuds/apple/airpods.html\r\n```\r\n\r\n:::info\r\n\r\n谁说的网址URL不能四层链接？！这个权威的例子，就是4层链接！\r\n\r\n:::\r\n\r\n显然，这是销售AirPods的产品页面的URL。\r\n\r\n这个子目录结构还可以清楚地表明：\r\n\r\n- 耳塞只是在线商店提供的产品类型之一。\r\n- 苹果公司生产这款产品，并且该品牌还可能有其它耳塞出售。\r\n- 商店中可能还会有其它品牌的耳塞待售。\r\n\r\n使用子目录可以更轻松地将关键字合并到URL中，而不会让URL像垃圾链接。\r\n\r\n**垃圾链接****:** `domain.com/buy-apple-airpods-earbuds.html`\r\n**友好的链接:** `domain.com/store/earbuds/apple/airpods.html`\r\n\r\n---\r\n\r\n## 现在禁止2个：\r\n\r\n1. 禁止更换WordPress主题！\r\n2. 禁止更换eazydoc插件！"},{"id":"流水账","metadata":{"permalink":"/blog/流水账","editUrl":"https://github.com/frankelinli/frankelinli.github.io/edit/main/blog/2024/04-06-Haha.md","source":"@site/blog/2024/04-06-Haha.md","title":"Haha","description":"汇率","date":"2023-03-23T00:00:00.000Z","tags":[],"readingTime":1.195,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2023-03-23T00:00:00.000Z","slug":"流水账"},"unlisted":false,"lastUpdatedAt":1539502055000,"prevItem":{"title":"20240322","permalink":"/blog/20240322"}},"content":"## 汇率\r\n\r\n年初手里有1500美元，当时汇率是7\r\n今天规律是7.21。\r\n美元放抽屉里不动，增值了300人民币？\r\n\r\n\r\n啊，这个牛肉酱竟然可以直接当下酒菜可以直接吃。也能配酒，\r\n\r\n## 公众号粉丝\r\n\r\n公众号粉丝最多一次流量：1000多次阅读，分享47次，原因是写的一片很细小的东西。\r\n\r\n![Screenshot_2024-03-22-17-11-22-784_com.tencent.mm](https://docu-1319658309.cos.ap-guangzhou.myqcloud.com/Screenshot_2024-03-22-17-11-22-784_com.tencent.mm.png)\r\n\r\n## 公园郊游。走出去，别老在家里。\r\n\r\n\r\n\r\n## 配置Algolia\r\n\r\n全部步骤对了。搜索框搜啥都没出来。等等吧。看明天是否会好起来。\r\n\r\n---\r\n\r\n找了清洁工阿姨来帮我清理房间垃圾，花费150元。感觉很值得。我自己来回路费比这还多。自己还要累的要命。早该行动了。\r\n\r\n自己没办法什么事情都做。社会是分工的。善于花点钱来调用各种资源，来给自己的核心项目、核心实业来完善。"}]}}